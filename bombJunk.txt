
bomb:     file format elf64-x86-64


Disassembly of section .init:

0000000000400b50 <_init>:
  400b50:	48 83 ec 08          	sub    $0x8,%rsp
  400b54:	48 8b 05 9d 44 20 00 	mov    0x20449d(%rip),%rax        # 604ff8 <_DYNAMIC+0x1d0>
  400b5b:	48 85 c0             	test   %rax,%rax
  400b5e:	74 05                	je     400b65 <_init+0x15>
  400b60:	e8 1b 01 00 00       	callq  400c80 <__gmon_start__@plt>
  400b65:	48 83 c4 08          	add    $0x8,%rsp
  400b69:	c3                   	retq   

Disassembly of section .plt:

0000000000400b70 <getenv@plt-0x10>:
  400b70:	ff 35 92 44 20 00    	pushq  0x204492(%rip)        # 605008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400b76:	ff 25 94 44 20 00    	jmpq   *0x204494(%rip)        # 605010 <_GLOBAL_OFFSET_TABLE_+0x10>
  400b7c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400b80 <getenv@plt>:
  400b80:	ff 25 92 44 20 00    	jmpq   *0x204492(%rip)        # 605018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400b86:	68 00 00 00 00       	pushq  $0x0
  400b8b:	e9 e0 ff ff ff       	jmpq   400b70 <_init+0x20>

0000000000400b90 <strcasecmp@plt>:
  400b90:	ff 25 8a 44 20 00    	jmpq   *0x20448a(%rip)        # 605020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400b96:	68 01 00 00 00       	pushq  $0x1
  400b9b:	e9 d0 ff ff ff       	jmpq   400b70 <_init+0x20>

0000000000400ba0 <__errno_location@plt>:
  400ba0:	ff 25 82 44 20 00    	jmpq   *0x204482(%rip)        # 605028 <_GLOBAL_OFFSET_TABLE_+0x28>
  400ba6:	68 02 00 00 00       	pushq  $0x2
  400bab:	e9 c0 ff ff ff       	jmpq   400b70 <_init+0x20>

0000000000400bb0 <strcpy@plt>:
  400bb0:	ff 25 7a 44 20 00    	jmpq   *0x20447a(%rip)        # 605030 <_GLOBAL_OFFSET_TABLE_+0x30>
  400bb6:	68 03 00 00 00       	pushq  $0x3
  400bbb:	e9 b0 ff ff ff       	jmpq   400b70 <_init+0x20>

0000000000400bc0 <puts@plt>:
  400bc0:	ff 25 72 44 20 00    	jmpq   *0x204472(%rip)        # 605038 <_GLOBAL_OFFSET_TABLE_+0x38>
  400bc6:	68 04 00 00 00       	pushq  $0x4
  400bcb:	e9 a0 ff ff ff       	jmpq   400b70 <_init+0x20>

0000000000400bd0 <write@plt>:
  400bd0:	ff 25 6a 44 20 00    	jmpq   *0x20446a(%rip)        # 605040 <_GLOBAL_OFFSET_TABLE_+0x40>
  400bd6:	68 05 00 00 00       	pushq  $0x5
  400bdb:	e9 90 ff ff ff       	jmpq   400b70 <_init+0x20>

0000000000400be0 <__stack_chk_fail@plt>:
  400be0:	ff 25 62 44 20 00    	jmpq   *0x204462(%rip)        # 605048 <_GLOBAL_OFFSET_TABLE_+0x48>
  400be6:	68 06 00 00 00       	pushq  $0x6
  400beb:	e9 80 ff ff ff       	jmpq   400b70 <_init+0x20>

0000000000400bf0 <alarm@plt>:
  400bf0:	ff 25 5a 44 20 00    	jmpq   *0x20445a(%rip)        # 605050 <_GLOBAL_OFFSET_TABLE_+0x50>
  400bf6:	68 07 00 00 00       	pushq  $0x7
  400bfb:	e9 70 ff ff ff       	jmpq   400b70 <_init+0x20>

0000000000400c00 <close@plt>:
  400c00:	ff 25 52 44 20 00    	jmpq   *0x204452(%rip)        # 605058 <_GLOBAL_OFFSET_TABLE_+0x58>
  400c06:	68 08 00 00 00       	pushq  $0x8
  400c0b:	e9 60 ff ff ff       	jmpq   400b70 <_init+0x20>

0000000000400c10 <read@plt>:
  400c10:	ff 25 4a 44 20 00    	jmpq   *0x20444a(%rip)        # 605060 <_GLOBAL_OFFSET_TABLE_+0x60>
  400c16:	68 09 00 00 00       	pushq  $0x9
  400c1b:	e9 50 ff ff ff       	jmpq   400b70 <_init+0x20>

0000000000400c20 <__libc_start_main@plt>:
  400c20:	ff 25 42 44 20 00    	jmpq   *0x204442(%rip)        # 605068 <_GLOBAL_OFFSET_TABLE_+0x68>
  400c26:	68 0a 00 00 00       	pushq  $0xa
  400c2b:	e9 40 ff ff ff       	jmpq   400b70 <_init+0x20>

0000000000400c30 <fgets@plt>:
  400c30:	ff 25 3a 44 20 00    	jmpq   *0x20443a(%rip)        # 605070 <_GLOBAL_OFFSET_TABLE_+0x70>
  400c36:	68 0b 00 00 00       	pushq  $0xb
  400c3b:	e9 30 ff ff ff       	jmpq   400b70 <_init+0x20>

0000000000400c40 <signal@plt>:
  400c40:	ff 25 32 44 20 00    	jmpq   *0x204432(%rip)        # 605078 <_GLOBAL_OFFSET_TABLE_+0x78>
  400c46:	68 0c 00 00 00       	pushq  $0xc
  400c4b:	e9 20 ff ff ff       	jmpq   400b70 <_init+0x20>

0000000000400c50 <gethostbyname@plt>:
  400c50:	ff 25 2a 44 20 00    	jmpq   *0x20442a(%rip)        # 605080 <_GLOBAL_OFFSET_TABLE_+0x80>
  400c56:	68 0d 00 00 00       	pushq  $0xd
  400c5b:	e9 10 ff ff ff       	jmpq   400b70 <_init+0x20>

0000000000400c60 <__memmove_chk@plt>:
  400c60:	ff 25 22 44 20 00    	jmpq   *0x204422(%rip)        # 605088 <_GLOBAL_OFFSET_TABLE_+0x88>
  400c66:	68 0e 00 00 00       	pushq  $0xe
  400c6b:	e9 00 ff ff ff       	jmpq   400b70 <_init+0x20>

0000000000400c70 <__memcpy_chk@plt>:
  400c70:	ff 25 1a 44 20 00    	jmpq   *0x20441a(%rip)        # 605090 <_GLOBAL_OFFSET_TABLE_+0x90>
  400c76:	68 0f 00 00 00       	pushq  $0xf
  400c7b:	e9 f0 fe ff ff       	jmpq   400b70 <_init+0x20>

0000000000400c80 <__gmon_start__@plt>:
  400c80:	ff 25 12 44 20 00    	jmpq   *0x204412(%rip)        # 605098 <_GLOBAL_OFFSET_TABLE_+0x98>
  400c86:	68 10 00 00 00       	pushq  $0x10
  400c8b:	e9 e0 fe ff ff       	jmpq   400b70 <_init+0x20>

0000000000400c90 <strtol@plt>:
  400c90:	ff 25 0a 44 20 00    	jmpq   *0x20440a(%rip)        # 6050a0 <_GLOBAL_OFFSET_TABLE_+0xa0>
  400c96:	68 11 00 00 00       	pushq  $0x11
  400c9b:	e9 d0 fe ff ff       	jmpq   400b70 <_init+0x20>

0000000000400ca0 <fflush@plt>:
  400ca0:	ff 25 02 44 20 00    	jmpq   *0x204402(%rip)        # 6050a8 <_GLOBAL_OFFSET_TABLE_+0xa8>
  400ca6:	68 12 00 00 00       	pushq  $0x12
  400cab:	e9 c0 fe ff ff       	jmpq   400b70 <_init+0x20>

0000000000400cb0 <__isoc99_sscanf@plt>:
  400cb0:	ff 25 fa 43 20 00    	jmpq   *0x2043fa(%rip)        # 6050b0 <_GLOBAL_OFFSET_TABLE_+0xb0>
  400cb6:	68 13 00 00 00       	pushq  $0x13
  400cbb:	e9 b0 fe ff ff       	jmpq   400b70 <_init+0x20>

0000000000400cc0 <__printf_chk@plt>:
  400cc0:	ff 25 f2 43 20 00    	jmpq   *0x2043f2(%rip)        # 6050b8 <_GLOBAL_OFFSET_TABLE_+0xb8>
  400cc6:	68 14 00 00 00       	pushq  $0x14
  400ccb:	e9 a0 fe ff ff       	jmpq   400b70 <_init+0x20>

0000000000400cd0 <fopen@plt>:
  400cd0:	ff 25 ea 43 20 00    	jmpq   *0x2043ea(%rip)        # 6050c0 <_GLOBAL_OFFSET_TABLE_+0xc0>
  400cd6:	68 15 00 00 00       	pushq  $0x15
  400cdb:	e9 90 fe ff ff       	jmpq   400b70 <_init+0x20>

0000000000400ce0 <gethostname@plt>:
  400ce0:	ff 25 e2 43 20 00    	jmpq   *0x2043e2(%rip)        # 6050c8 <_GLOBAL_OFFSET_TABLE_+0xc8>
  400ce6:	68 16 00 00 00       	pushq  $0x16
  400ceb:	e9 80 fe ff ff       	jmpq   400b70 <_init+0x20>

0000000000400cf0 <exit@plt>:
  400cf0:	ff 25 da 43 20 00    	jmpq   *0x2043da(%rip)        # 6050d0 <_GLOBAL_OFFSET_TABLE_+0xd0>
  400cf6:	68 17 00 00 00       	pushq  $0x17
  400cfb:	e9 70 fe ff ff       	jmpq   400b70 <_init+0x20>

0000000000400d00 <connect@plt>:
  400d00:	ff 25 d2 43 20 00    	jmpq   *0x2043d2(%rip)        # 6050d8 <_GLOBAL_OFFSET_TABLE_+0xd8>
  400d06:	68 18 00 00 00       	pushq  $0x18
  400d0b:	e9 60 fe ff ff       	jmpq   400b70 <_init+0x20>

0000000000400d10 <__fprintf_chk@plt>:
  400d10:	ff 25 ca 43 20 00    	jmpq   *0x2043ca(%rip)        # 6050e0 <_GLOBAL_OFFSET_TABLE_+0xe0>
  400d16:	68 19 00 00 00       	pushq  $0x19
  400d1b:	e9 50 fe ff ff       	jmpq   400b70 <_init+0x20>

0000000000400d20 <sleep@plt>:
  400d20:	ff 25 c2 43 20 00    	jmpq   *0x2043c2(%rip)        # 6050e8 <_GLOBAL_OFFSET_TABLE_+0xe8>
  400d26:	68 1a 00 00 00       	pushq  $0x1a
  400d2b:	e9 40 fe ff ff       	jmpq   400b70 <_init+0x20>

0000000000400d30 <__ctype_b_loc@plt>:
  400d30:	ff 25 ba 43 20 00    	jmpq   *0x2043ba(%rip)        # 6050f0 <_GLOBAL_OFFSET_TABLE_+0xf0>
  400d36:	68 1b 00 00 00       	pushq  $0x1b
  400d3b:	e9 30 fe ff ff       	jmpq   400b70 <_init+0x20>

0000000000400d40 <__sprintf_chk@plt>:
  400d40:	ff 25 b2 43 20 00    	jmpq   *0x2043b2(%rip)        # 6050f8 <_GLOBAL_OFFSET_TABLE_+0xf8>
  400d46:	68 1c 00 00 00       	pushq  $0x1c
  400d4b:	e9 20 fe ff ff       	jmpq   400b70 <_init+0x20>

0000000000400d50 <socket@plt>:
  400d50:	ff 25 aa 43 20 00    	jmpq   *0x2043aa(%rip)        # 605100 <_GLOBAL_OFFSET_TABLE_+0x100>
  400d56:	68 1d 00 00 00       	pushq  $0x1d
  400d5b:	e9 10 fe ff ff       	jmpq   400b70 <_init+0x20>

Disassembly of section .text:

0000000000400d60 <_start>:
  400d60:	31 ed                	xor    %ebp,%ebp	#x^x==0 always
  400d62:	49 89 d1             	mov    %rdx,%r9		
  400d65:	5e                   	pop    %rsi
  400d66:	48 89 e2             	mov    %rsp,%rdx
  400d69:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  400d6d:	50                   	push   %rax
  400d6e:	54                   	push   %rsp
  400d6f:	49 c7 c0 f0 24 40 00 	mov    $0x4024f0,%r8
  400d76:	48 c7 c1 80 24 40 00 	mov    $0x402480,%rcx
  400d7d:	48 c7 c7 4d 0e 40 00 	mov    $0x400e4d,%rdi
  400d84:	e8 97 fe ff ff       	callq  400c20 <__libc_start_main@plt>
  400d89:	f4                   	hlt    
  400d8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400d90 <deregister_tm_clones>:
  400d90:	b8 c7 57 61 00       	mov    $0x6157c7,%eax
  400d95:	55                   	push   %rbp
  400d96:	48 2d c0 57 61 00    	sub    $0x6157c0,%rax
  400d9c:	48 83 f8 0e          	cmp    $0xe,%rax
  400da0:	48 89 e5             	mov    %rsp,%rbp
  400da3:	77 02                	ja     400da7 <deregister_tm_clones+0x17>
  400da5:	5d                   	pop    %rbp
  400da6:	c3                   	retq   
  400da7:	b8 00 00 00 00       	mov    $0x0,%eax
  400dac:	48 85 c0             	test   %rax,%rax
  400daf:	74 f4                	je     400da5 <deregister_tm_clones+0x15>
  400db1:	5d                   	pop    %rbp
  400db2:	bf c0 57 61 00       	mov    $0x6157c0,%edi
  400db7:	ff e0                	jmpq   *%rax
  400db9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400dc0 <register_tm_clones>:
  400dc0:	b8 c0 57 61 00       	mov    $0x6157c0,%eax
  400dc5:	55                   	push   %rbp
  400dc6:	48 2d c0 57 61 00    	sub    $0x6157c0,%rax
  400dcc:	48 c1 f8 03          	sar    $0x3,%rax
  400dd0:	48 89 e5             	mov    %rsp,%rbp
  400dd3:	48 89 c2             	mov    %rax,%rdx
  400dd6:	48 c1 ea 3f          	shr    $0x3f,%rdx
  400dda:	48 01 d0             	add    %rdx,%rax
  400ddd:	48 d1 f8             	sar    %rax
  400de0:	75 02                	jne    400de4 <register_tm_clones+0x24>
  400de2:	5d                   	pop    %rbp
  400de3:	c3                   	retq   
  400de4:	ba 00 00 00 00       	mov    $0x0,%edx
  400de9:	48 85 d2             	test   %rdx,%rdx
  400dec:	74 f4                	je     400de2 <register_tm_clones+0x22>
  400dee:	5d                   	pop    %rbp
  400def:	48 89 c6             	mov    %rax,%rsi
  400df2:	bf c0 57 61 00       	mov    $0x6157c0,%edi
  400df7:	ff e2                	jmpq   *%rdx
  400df9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400e00 <__do_global_dtors_aux>:
  400e00:	80 3d d1 49 21 00 00 	cmpb   $0x0,0x2149d1(%rip)        # 6157d8 <completed.6972>
  400e07:	75 11                	jne    400e1a <__do_global_dtors_aux+0x1a>
  400e09:	55                   	push   %rbp
  400e0a:	48 89 e5             	mov    %rsp,%rbp
  400e0d:	e8 7e ff ff ff       	callq  400d90 <deregister_tm_clones>
  400e12:	5d                   	pop    %rbp
  400e13:	c6 05 be 49 21 00 01 	movb   $0x1,0x2149be(%rip)        # 6157d8 <completed.6972>
  400e1a:	f3 c3                	repz retq 
  400e1c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400e20 <frame_dummy>:
  400e20:	48 83 3d f8 3f 20 00 	cmpq   $0x0,0x203ff8(%rip)        # 604e20 <__JCR_END__>
  400e27:	00 
  400e28:	74 1e                	je     400e48 <frame_dummy+0x28>
  400e2a:	b8 00 00 00 00       	mov    $0x0,%eax
  400e2f:	48 85 c0             	test   %rax,%rax
  400e32:	74 14                	je     400e48 <frame_dummy+0x28>
  400e34:	55                   	push   %rbp
  400e35:	bf 20 4e 60 00       	mov    $0x604e20,%edi
  400e3a:	48 89 e5             	mov    %rsp,%rbp
  400e3d:	ff d0                	callq  *%rax
  400e3f:	5d                   	pop    %rbp
  400e40:	e9 7b ff ff ff       	jmpq   400dc0 <register_tm_clones>
  400e45:	0f 1f 00             	nopl   (%rax)
  400e48:	e9 73 ff ff ff       	jmpq   400dc0 <register_tm_clones>

0000000000400e4d <main>:
  400e4d:	53                   	push   %rbx
  400e4e:	83 ff 01             	cmp    $0x1,%edi
  400e51:	75 10                	jne    400e63 <main+0x16>
  400e53:	48 8b 05 6e 49 21 00 	mov    0x21496e(%rip),%rax        # 6157c8 <stdin@@GLIBC_2.2.5>
  400e5a:	48 89 05 7f 49 21 00 	mov    %rax,0x21497f(%rip)        # 6157e0 <infile>
  400e61:	eb 63                	jmp    400ec6 <main+0x79>
  400e63:	48 89 f3             	mov    %rsi,%rbx
  400e66:	83 ff 02             	cmp    $0x2,%edi
  400e69:	75 3a                	jne    400ea5 <main+0x58>
  400e6b:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
  400e6f:	be 04 25 40 00       	mov    $0x402504,%esi
  400e74:	e8 57 fe ff ff       	callq  400cd0 <fopen@plt>
  400e79:	48 89 05 60 49 21 00 	mov    %rax,0x214960(%rip)        # 6157e0 <infile>
  400e80:	48 85 c0             	test   %rax,%rax
  400e83:	75 41                	jne    400ec6 <main+0x79>
  400e85:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
  400e89:	48 8b 13             	mov    (%rbx),%rdx
  400e8c:	be 06 25 40 00       	mov    $0x402506,%esi
  400e91:	bf 01 00 00 00       	mov    $0x1,%edi
  400e96:	e8 25 fe ff ff       	callq  400cc0 <__printf_chk@plt>
  400e9b:	bf 08 00 00 00       	mov    $0x8,%edi
  400ea0:	e8 4b fe ff ff       	callq  400cf0 <exit@plt>
  400ea5:	48 8b 16             	mov    (%rsi),%rdx
  400ea8:	be 23 25 40 00       	mov    $0x402523,%esi
  400ead:	bf 01 00 00 00       	mov    $0x1,%edi
  400eb2:	b8 00 00 00 00       	mov    $0x0,%eax
  400eb7:	e8 04 fe ff ff       	callq  400cc0 <__printf_chk@plt>
  400ebc:	bf 08 00 00 00       	mov    $0x8,%edi
  400ec1:	e8 2a fe ff ff       	callq  400cf0 <exit@plt>
  400ec6:	e8 47 05 00 00       	callq  401412 <initialize_bomb>
  400ecb:	bf 88 25 40 00       	mov    $0x402588,%edi
  400ed0:	e8 eb fc ff ff       	callq  400bc0 <puts@plt>
  400ed5:	bf c8 25 40 00       	mov    $0x4025c8,%edi
  400eda:	e8 e1 fc ff ff       	callq  400bc0 <puts@plt>
  400edf:	e8 10 08 00 00       	callq  4016f4 <read_line>
  400ee4:	48 89 c7             	mov    %rax,%rdi		#input string as variable to phase_1 function call
  400ee7:	e8 a4 00 00 00       	callq  400f90 <phase_1>
  400eec:	e8 29 09 00 00       	callq  40181a <phase_defused>
  400ef1:	bf f8 25 40 00       	mov    $0x4025f8,%edi
  400ef6:	e8 c5 fc ff ff       	callq  400bc0 <puts@plt>
  400efb:	e8 f4 07 00 00       	callq  4016f4 <read_line>
  400f00:	48 89 c7             	mov    %rax,%rdi
  400f03:	e8 a4 00 00 00       	callq  400fac <phase_2>
  400f08:	e8 0d 09 00 00       	callq  40181a <phase_defused>
  400f0d:	bf 3d 25 40 00       	mov    $0x40253d,%edi
  400f12:	e8 a9 fc ff ff       	callq  400bc0 <puts@plt>
  400f17:	e8 d8 07 00 00       	callq  4016f4 <read_line>
  400f1c:	48 89 c7             	mov    %rax,%rdi
  400f1f:	e8 d7 00 00 00       	callq  400ffb <phase_3>
  400f24:	e8 f1 08 00 00       	callq  40181a <phase_defused>
  400f29:	bf 5b 25 40 00       	mov    $0x40255b,%edi
  400f2e:	e8 8d fc ff ff       	callq  400bc0 <puts@plt>
  400f33:	e8 bc 07 00 00       	callq  4016f4 <read_line>
  400f38:	48 89 c7             	mov    %rax,%rdi
  400f3b:	e8 84 01 00 00       	callq  4010c4 <phase_4>
  400f40:	e8 d5 08 00 00       	callq  40181a <phase_defused>
  400f45:	bf 28 26 40 00       	mov    $0x402628,%edi
  400f4a:	e8 71 fc ff ff       	callq  400bc0 <puts@plt>
  400f4f:	e8 a0 07 00 00       	callq  4016f4 <read_line>
  400f54:	48 89 c7             	mov    %rax,%rdi
  400f57:	e8 bf 01 00 00       	callq  40111b <phase_5>
  400f5c:	e8 b9 08 00 00       	callq  40181a <phase_defused>
  400f61:	bf 6a 25 40 00       	mov    $0x40256a,%edi
  400f66:	e8 55 fc ff ff       	callq  400bc0 <puts@plt>
  400f6b:	e8 84 07 00 00       	callq  4016f4 <read_line>
  400f70:	48 89 c7             	mov    %rax,%rdi
  400f73:	e8 10 02 00 00       	callq  401188 <phase_6>
  400f78:	e8 9d 08 00 00       	callq  40181a <phase_defused>
  400f7d:	b8 00 00 00 00       	mov    $0x0,%eax
  400f82:	5b                   	pop    %rbx
  400f83:	c3                   	retq   
  400f84:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400f8b:	00 00 00 
  400f8e:	66 90                	xchg   %ax,%ax

0000000000400f90 <phase_1>:
  400f90:	48 83 ec 08          	sub    $0x8,%rsp			#allocate space on the stack
  400f94:	be 50 26 40 00       	mov    $0x402650,%esi			#whatever is at address 0x402650 is what the string has to be
  400f99:	e8 0a 04 00 00       	callq  4013a8 <strings_not_equal>
  400f9e:	85 c0                	test   %eax,%eax			#strings_not_equal returns 1 is not equal
  400fa0:	74 05                	je     400fa7 <phase_1+0x17>		#if strings_not_equal returned 0, goto done 
  400fa2:	e8 d5 06 00 00       	callq  40167c <explode_bomb>		#else explode the bomb
  400fa7:	48 83 c4 08          	add    $0x8,%rsp			#reset the frame
  400fab:	c3                   	retq   

0000000000400fac <phase_2>:
  400fac:	55                   	push   %rbp	
  400fad:	53                   	push   %rbx
  400fae:	48 83 ec 28          	sub    $0x28,%rsp			#allocate space on the stack
  400fb2:	48 89 e6             	mov    %rsp,%rsi
  400fb5:	e8 f8 06 00 00       	callq  4016b2 <read_six_numbers>        #value of what the stackpointer was might be the 6 number string 
  400fba:	83 3c 24 00          	cmpl   $0x0,(%rsp)			#need 6 numbers, first 3 "0 1 1"?
  400fbe:	75 07                	jne    400fc7 <phase_2+0x1b>
  400fc0:	83 7c 24 04 01       	cmpl   $0x1,0x4(%rsp)
  400fc5:	74 21                	je     400fe8 <phase_2+0x3c>
  400fc7:	e8 b0 06 00 00       	callq  40167c <explode_bomb>
  400fcc:	eb 1a                	jmp    400fe8 <phase_2+0x3c>
  400fce:	8b 43 f8             	mov    -0x8(%rbx),%eax
  400fd1:	03 43 fc             	add    -0x4(%rbx),%eax
  400fd4:	39 03                	cmp    %eax,(%rbx)
  400fd6:	74 05                	je     400fdd <phase_2+0x31>
  400fd8:	e8 9f 06 00 00       	callq  40167c <explode_bomb>
  400fdd:	48 83 c3 04          	add    $0x4,%rbx
  400fe1:	48 39 eb             	cmp    %rbp,%rbx
  400fe4:	75 e8                	jne    400fce <phase_2+0x22>
  400fe6:	eb 0c                	jmp    400ff4 <phase_2+0x48>
  400fe8:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
  400fed:	48 8d 6c 24 18       	lea    0x18(%rsp),%rbp
  400ff2:	eb da                	jmp    400fce <phase_2+0x22>
  400ff4:	48 83 c4 28          	add    $0x28,%rsp
  400ff8:	5b                   	pop    %rbx
  400ff9:	5d                   	pop    %rbp
  400ffa:	c3                   	retq   

0000000000400ffb <phase_3>:
  400ffb:	48 83 ec 18          	sub    $0x18,%rsp
  400fff:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
  401004:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  401009:	be 8d 29 40 00       	mov    $0x40298d,%esi
  40100e:	b8 00 00 00 00       	mov    $0x0,%eax
  401013:	e8 98 fc ff ff       	callq  400cb0 <__isoc99_sscanf@plt>
  401018:	83 f8 01             	cmp    $0x1,%eax
  40101b:	7f 05                	jg     401022 <phase_3+0x27>
  40101d:	e8 5a 06 00 00       	callq  40167c <explode_bomb>
  401022:	83 7c 24 08 07       	cmpl   $0x7,0x8(%rsp)
  401027:	77 3c                	ja     401065 <phase_3+0x6a>
  401029:	8b 44 24 08          	mov    0x8(%rsp),%eax
  40102d:	ff 24 c5 c0 26 40 00 	jmpq   *0x4026c0(,%rax,8)
  401034:	b8 74 03 00 00       	mov    $0x374,%eax
  401039:	eb 3b                	jmp    401076 <phase_3+0x7b>
  40103b:	b8 65 02 00 00       	mov    $0x265,%eax
  401040:	eb 34                	jmp    401076 <phase_3+0x7b>
  401042:	b8 d6 02 00 00       	mov    $0x2d6,%eax		#jump here from 0x40102d?
  401047:	eb 2d                	jmp    401076 <phase_3+0x7b>
  401049:	b8 b5 02 00 00       	mov    $0x2b5,%eax
  40104e:	eb 26                	jmp    401076 <phase_3+0x7b>
  401050:	b8 44 02 00 00       	mov    $0x244,%eax
  401055:	eb 1f                	jmp    401076 <phase_3+0x7b>
  401057:	b8 1c 01 00 00       	mov    $0x11c,%eax
  40105c:	eb 18                	jmp    401076 <phase_3+0x7b>
  40105e:	b8 ab 00 00 00       	mov    $0xab,%eax
  401063:	eb 11                	jmp    401076 <phase_3+0x7b>
  401065:	e8 12 06 00 00       	callq  40167c <explode_bomb>
  40106a:	b8 00 00 00 00       	mov    $0x0,%eax
  40106f:	eb 05                	jmp    401076 <phase_3+0x7b>
  401071:	b8 c9 00 00 00       	mov    $0xc9,%eax
  401076:	3b 44 24 0c          	cmp    0xc(%rsp),%eax
  40107a:	74 05                	je     401081 <phase_3+0x86>
  40107c:	e8 fb 05 00 00       	callq  40167c <explode_bomb>
  401081:	48 83 c4 18          	add    $0x18,%rsp
  401085:	c3                   	retq   

0000000000401086 <func4>:
  401086:	48 83 ec 08          	sub    $0x8,%rsp		#allocate space
  40108a:	89 d0                	mov    %edx,%eax		#move 0xe to eax
  40108c:	29 f0                	sub    %esi,%eax		#compute 0xe - 0x0 = 0xe(14)
  40108e:	89 c1                	mov    %eax,%ecx		#move 0xe to ecx
  401090:	c1 e9 1f             	shr    $0x1f,%ecx		#shift right 31 bits, get msb(sign bit)
  401093:	01 c8                	add    %ecx,%eax		#compute 0x0 + 0xe = 0xe
  401095:	d1 f8                	sar    %eax			#divide by 2?
  401097:	8d 0c 30             	lea    (%rax,%rsi,1),%ecx	#ecx => 7 + 0
  40109a:	39 f9                	cmp    %edi,%ecx		#compute if( 7 - firstArg)<=0 goto func4+24 
  40109c:	7e 0c                	jle    4010aa <func4+0x24>	
  40109e:	8d 51 ff             	lea    -0x1(%rcx),%edx		#else 7-1=6==>edx(param)
  4010a1:	e8 e0 ff ff ff       	callq  401086 <func4>		#pass as param and call func4 recursively
  4010a6:	01 c0                	add    %eax,%eax
  4010a8:	eb 15                	jmp    4010bf <func4+0x39>
  4010aa:	b8 00 00 00 00       	mov    $0x0,%eax
  4010af:	39 f9                	cmp    %edi,%ecx
  4010b1:	7d 0c                	jge    4010bf <func4+0x39>
  4010b3:	8d 71 01             	lea    0x1(%rcx),%esi
  4010b6:	e8 cb ff ff ff       	callq  401086 <func4>
  4010bb:	8d 44 00 01          	lea    0x1(%rax,%rax,1),%eax
  4010bf:	48 83 c4 08          	add    $0x8,%rsp
  4010c3:	c3                   	retq   

00000000004010c4 <phase_4>:
  4010c4:	48 83 ec 18          	sub    $0x18,%rsp
  4010c8:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx  4010cd:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  4010d2:	be 8d 29 40 00       	mov    $0x40298d,%esi		#format string "%d %d"
  4010d7:	b8 00 00 00 00       	mov    $0x0,%eax
  4010dc:	e8 cf fb ff ff       	callq  400cb0 <__isoc99_sscanf@plt>  #make sure string fits format
  4010e1:	83 f8 02             	cmp    $0x2,%eax		#if string fits, return2
  4010e4:	75 07                	jne    4010ed <phase_4+0x29>	#else explode bomb
  4010e6:	83 7c 24 08 0e       	cmpl   $0xe,0x8(%rsp)		#second arg - 14
  4010eb:	76 05                	jbe    4010f2 <phase_4+0x2e>	#if secArg >14 explode bomb
  4010ed:	e8 8a 05 00 00       	callq  40167c <explode_bomb>
  4010f2:	ba 0e 00 00 00       	mov    $0xe,%edx		
  4010f7:	be 00 00 00 00       	mov    $0x0,%esi
  4010fc:	8b 7c 24 08          	mov    0x8(%rsp),%edi
  401100:	e8 81 ff ff ff       	callq  401086 <func4>
  401105:	83 f8 03             	cmp    $0x3,%eax
  401108:	75 07                	jne    401111 <phase_4+0x4d>
  40110a:	83 7c 24 0c 03       	cmpl   $0x3,0xc(%rsp)
  40110f:	74 05                	je     401116 <phase_4+0x52>
  401111:	e8 66 05 00 00       	callq  40167c <explode_bomb>
  401116:	48 83 c4 18          	add    $0x18,%rsp
  40111a:	c3                   	retq   

000000000040111b <phase_5>:
  40111b:	48 83 ec 18          	sub    $0x18,%rsp		#allocate space
  40111f:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx		#load
  401124:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx		#load
  401129:	be 8d 29 40 00       	mov    $0x40298d,%esi		#"%d %d" format
  40112e:	b8 00 00 00 00       	mov    $0x0,%eax		#eax ==> 0x0
  401133:	e8 78 fb ff ff       	callq  400cb0 <__isoc99_sscanf@plt>  #see if input matches format
  401138:	83 f8 01             	cmp    $0x1,%eax
  40113b:	7f 05                	jg     401142 <phase_5+0x27>
  40113d:	e8 3a 05 00 00       	callq  40167c <explode_bomb>
  401142:	8b 44 24 08          	mov    0x8(%rsp),%eax		#get num1
  401146:	83 e0 0f             	and    $0xf,%eax		#num1 & 0xf
  401149:	89 44 24 08          	mov    %eax,0x8(%rsp)		#put num1 back?
  40114d:	83 f8 0f             	cmp    $0xf,%eax		#compute num1 - 0xf
  401150:	74 2c                	je     40117e <phase_5+0x63>	#if num1 and 0xf are equal goto explode bomb
  401152:	b9 00 00 00 00       	mov    $0x0,%ecx		
  401157:	ba 00 00 00 00       	mov    $0x0,%edx
  40115c:	83 c2 01             	add    $0x1,%edx
  40115f:	48 98                	cltq				#sign extending??
  401161:	8b 04 85 00 27 40 00 	mov    0x402700(,%rax,4),%eax	#0x402700 start address of array??
  401168:	01 c1                	add    %eax,%ecx
  40116a:	83 f8 0f             	cmp    $0xf,%eax
  40116d:	75 ed                	jne    40115c <phase_5+0x41>
  40116f:	89 44 24 08          	mov    %eax,0x8(%rsp)
  401173:	83 fa 0f             	cmp    $0xf,%edx		#must iterate 0xf = 15 times
  401176:	75 06                	jne    40117e <phase_5+0x63>
  401178:	3b 4c 24 0c          	cmp    0xc(%rsp),%ecx
  40117c:	74 05                	je     401183 <phase_5+0x68>
  40117e:	e8 f9 04 00 00       	callq  40167c <explode_bomb>
  401183:	48 83 c4 18          	add    $0x18,%rsp
  401187:	c3                   	retq   

0000000000401188 <phase_6>:
  401188:	41 55                	push   %r13
  40118a:	41 54                	push   %r12
  40118c:	55                   	push   %rbp
  40118d:	53                   	push   %rbx
  40118e:	48 83 ec 58          	sub    $0x58,%rsp		#allocate space
  401192:	48 89 e6             	mov    %rsp,%rsi		#rsi  == 0x7fffffffe130
  401195:	e8 18 05 00 00       	callq  4016b2 <read_six_numbers>
  40119a:	49 89 e5             	mov    %rsp,%r13		#r13 == 0x7fffffffe130
  40119d:	41 bc 00 00 00 00    	mov    $0x0,%r12d		#r12d == 0x0
  4011a3:	4c 89 ed             	mov    %r13,%rbp		#iterates over each number of the input
  4011a6:	41 8b 45 00          	mov    0x0(%r13),%eax		
  4011aa:	83 e8 01             	sub    $0x1,%eax
  4011ad:	83 f8 05             	cmp    $0x5,%eax
  4011b0:	76 05                	jbe    4011b7 <phase_6+0x2f>
  4011b2:	e8 c5 04 00 00       	callq  40167c <explode_bomb>
  4011b7:	41 83 c4 01          	add    $0x1,%r12d
  4011bb:	41 83 fc 06          	cmp    $0x6,%r12d
  4011bf:	75 07                	jne    4011c8 <phase_6+0x40>
  4011c1:	be 00 00 00 00       	mov    $0x0,%esi
  4011c6:	eb 42                	jmp    40120a <phase_6+0x82>
  4011c8:	44 89 e3             	mov    %r12d,%ebx
  4011cb:	48 63 c3             	movslq %ebx,%rax
  4011ce:	8b 04 84             	mov    (%rsp,%rax,4),%eax
  4011d1:	39 45 00             	cmp    %eax,0x0(%rbp)
  4011d4:	75 05                	jne    4011db <phase_6+0x53>
  4011d6:	e8 a1 04 00 00       	callq  40167c <explode_bomb>
  4011db:	83 c3 01             	add    $0x1,%ebx
  4011de:	83 fb 05             	cmp    $0x5,%ebx
  4011e1:	7e e8                	jle    4011cb <phase_6+0x43>
  4011e3:	49 83 c5 04          	add    $0x4,%r13
  4011e7:	eb ba                	jmp    4011a3 <phase_6+0x1b>		#every number is bigger than the one before it and is not a duplicate??
  4011e9:	48 8b 52 08          	mov    0x8(%rdx),%rdx
  4011ed:	83 c0 01             	add    $0x1,%eax
  4011f0:	39 c8                	cmp    %ecx,%eax
  4011f2:	75 f5                	jne    4011e9 <phase_6+0x61>
  4011f4:	eb 05                	jmp    4011fb <phase_6+0x73>
  4011f6:	ba 20 53 60 00       	mov    $0x605320,%edx
  4011fb:	48 89 54 74 20       	mov    %rdx,0x20(%rsp,%rsi,2)
  401200:	48 83 c6 04          	add    $0x4,%rsi
  401204:	48 83 fe 18          	cmp    $0x18,%rsi
  401208:	74 14                	je     40121e <phase_6+0x96>
  40120a:	8b 0c 34             	mov    (%rsp,%rsi,1),%ecx
  40120d:	83 f9 01             	cmp    $0x1,%ecx		#make sure all nums 1 or larger
  401210:	7e e4                	jle    4011f6 <phase_6+0x6e>
  401212:	b8 01 00 00 00       	mov    $0x1,%eax
  401217:	ba 20 53 60 00       	mov    $0x605320,%edx
  40121c:	eb cb                	jmp    4011e9 <phase_6+0x61>
  40121e:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
  401223:	48 8d 44 24 28       	lea    0x28(%rsp),%rax
  401228:	48 8d 74 24 50       	lea    0x50(%rsp),%rsi
  40122d:	48 89 d9             	mov    %rbx,%rcx
  401230:	48 8b 10             	mov    (%rax),%rdx
  401233:	48 89 51 08          	mov    %rdx,0x8(%rcx)
  401237:	48 83 c0 08          	add    $0x8,%rax
  40123b:	48 39 f0             	cmp    %rsi,%rax
  40123e:	74 05                	je     401245 <phase_6+0xbd>
  401240:	48 89 d1             	mov    %rdx,%rcx
  401243:	eb eb                	jmp    401230 <phase_6+0xa8>
  401245:	48 c7 42 08 00 00 00 	movq   $0x0,0x8(%rdx)
  40124c:	00 
  40124d:	bd 05 00 00 00       	mov    $0x5,%ebp
  401252:	48 8b 43 08          	mov    0x8(%rbx),%rax
  401256:	8b 00                	mov    (%rax),%eax
  401258:	39 03                	cmp    %eax,(%rbx)
  40125a:	7e 05                	jle    401261 <phase_6+0xd9>
  40125c:	e8 1b 04 00 00       	callq  40167c <explode_bomb>
  401261:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
  401265:	83 ed 01             	sub    $0x1,%ebp
  401268:	75 e8                	jne    401252 <phase_6+0xca>
  40126a:	48 83 c4 58          	add    $0x58,%rsp
  40126e:	5b                   	pop    %rbx
  40126f:	5d                   	pop    %rbp
  401270:	41 5c                	pop    %r12
  401272:	41 5d                	pop    %r13
  401274:	c3                   	retq   

0000000000401275 <fun7>:
  401275:	48 83 ec 08          	sub    $0x8,%rsp
  401279:	48 85 ff             	test   %rdi,%rdi
  40127c:	74 2b                	je     4012a9 <fun7+0x34>
  40127e:	8b 17                	mov    (%rdi),%edx
  401280:	39 f2                	cmp    %esi,%edx
  401282:	7e 0d                	jle    401291 <fun7+0x1c>
  401284:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
  401288:	e8 e8 ff ff ff       	callq  401275 <fun7>
  40128d:	01 c0                	add    %eax,%eax
  40128f:	eb 1d                	jmp    4012ae <fun7+0x39>
  401291:	b8 00 00 00 00       	mov    $0x0,%eax
  401296:	39 f2                	cmp    %esi,%edx
  401298:	74 14                	je     4012ae <fun7+0x39>
  40129a:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
  40129e:	e8 d2 ff ff ff       	callq  401275 <fun7>
  4012a3:	8d 44 00 01          	lea    0x1(%rax,%rax,1),%eax
  4012a7:	eb 05                	jmp    4012ae <fun7+0x39>
  4012a9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4012ae:	48 83 c4 08          	add    $0x8,%rsp
  4012b2:	c3                   	retq   

00000000004012b3 <secret_phase>:
  4012b3:	53                   	push   %rbx
  4012b4:	e8 3b 04 00 00       	callq  4016f4 <read_line>
  4012b9:	ba 0a 00 00 00       	mov    $0xa,%edx
  4012be:	be 00 00 00 00       	mov    $0x0,%esi
  4012c3:	48 89 c7             	mov    %rax,%rdi
  4012c6:	e8 c5 f9 ff ff       	callq  400c90 <strtol@plt>
  4012cb:	48 89 c3             	mov    %rax,%rbx
  4012ce:	8d 40 ff             	lea    -0x1(%rax),%eax
  4012d1:	3d e8 03 00 00       	cmp    $0x3e8,%eax
  4012d6:	76 05                	jbe    4012dd <secret_phase+0x2a>
  4012d8:	e8 9f 03 00 00       	callq  40167c <explode_bomb>
  4012dd:	89 de                	mov    %ebx,%esi
  4012df:	bf 40 51 60 00       	mov    $0x605140,%edi
  4012e4:	e8 8c ff ff ff       	callq  401275 <fun7>
  4012e9:	83 f8 04             	cmp    $0x4,%eax
  4012ec:	74 05                	je     4012f3 <secret_phase+0x40>
  4012ee:	e8 89 03 00 00       	callq  40167c <explode_bomb>
  4012f3:	bf 80 26 40 00       	mov    $0x402680,%edi
  4012f8:	e8 c3 f8 ff ff       	callq  400bc0 <puts@plt>
  4012fd:	e8 18 05 00 00       	callq  40181a <phase_defused>
  401302:	5b                   	pop    %rbx
  401303:	c3                   	retq   
  401304:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40130b:	00 00 00 
  40130e:	66 90                	xchg   %ax,%ax

0000000000401310 <sig_handler>:
  401310:	48 83 ec 08          	sub    $0x8,%rsp
  401314:	bf 40 27 40 00       	mov    $0x402740,%edi
  401319:	e8 a2 f8 ff ff       	callq  400bc0 <puts@plt>
  40131e:	bf 03 00 00 00       	mov    $0x3,%edi
  401323:	e8 f8 f9 ff ff       	callq  400d20 <sleep@plt>
  401328:	be 09 29 40 00       	mov    $0x402909,%esi
  40132d:	bf 01 00 00 00       	mov    $0x1,%edi
  401332:	b8 00 00 00 00       	mov    $0x0,%eax
  401337:	e8 84 f9 ff ff       	callq  400cc0 <__printf_chk@plt>
  40133c:	48 8b 3d 7d 44 21 00 	mov    0x21447d(%rip),%rdi        # 6157c0 <__TMC_END__>
  401343:	e8 58 f9 ff ff       	callq  400ca0 <fflush@plt>
  401348:	bf 01 00 00 00       	mov    $0x1,%edi
  40134d:	e8 ce f9 ff ff       	callq  400d20 <sleep@plt>
  401352:	bf 11 29 40 00       	mov    $0x402911,%edi
  401357:	e8 64 f8 ff ff       	callq  400bc0 <puts@plt>
  40135c:	bf 10 00 00 00       	mov    $0x10,%edi
  401361:	e8 8a f9 ff ff       	callq  400cf0 <exit@plt>

0000000000401366 <invalid_phase>:
  401366:	48 83 ec 08          	sub    $0x8,%rsp
  40136a:	48 89 fa             	mov    %rdi,%rdx
  40136d:	be 19 29 40 00       	mov    $0x402919,%esi
  401372:	bf 01 00 00 00       	mov    $0x1,%edi
  401377:	b8 00 00 00 00       	mov    $0x0,%eax
  40137c:	e8 3f f9 ff ff       	callq  400cc0 <__printf_chk@plt>
  401381:	bf 08 00 00 00       	mov    $0x8,%edi
  401386:	e8 65 f9 ff ff       	callq  400cf0 <exit@plt>

000000000040138b <string_length>:
  40138b:	80 3f 00             	cmpb   $0x0,(%rdi)
  40138e:	74 12                	je     4013a2 <string_length+0x17>
  401390:	48 89 fa             	mov    %rdi,%rdx
  401393:	48 83 c2 01          	add    $0x1,%rdx
  401397:	89 d0                	mov    %edx,%eax
  401399:	29 f8                	sub    %edi,%eax
  40139b:	80 3a 00             	cmpb   $0x0,(%rdx)
  40139e:	75 f3                	jne    401393 <string_length+0x8>
  4013a0:	f3 c3                	repz retq 
  4013a2:	b8 00 00 00 00       	mov    $0x0,%eax
  4013a7:	c3                   	retq   

00000000004013a8 <strings_not_equal>:
  4013a8:	41 54                	push   %r12
  4013aa:	55                   	push   %rbp
  4013ab:	53                   	push   %rbx
  4013ac:	48 89 fb             	mov    %rdi,%rbx
  4013af:	48 89 f5             	mov    %rsi,%rbp
  4013b2:	e8 d4 ff ff ff       	callq  40138b <string_length>		#get the length of the input string
  4013b7:	41 89 c4             	mov    %eax,%r12d			#move the length of the input string to reg12d
  4013ba:	48 89 ef             	mov    %rbp,%rdi			
  4013bd:	e8 c9 ff ff ff       	callq  40138b <string_length>
  4013c2:	ba 01 00 00 00       	mov    $0x1,%edx
  4013c7:	41 39 c4             	cmp    %eax,%r12d
  4013ca:	75 3f                	jne    40140b <strings_not_equal+0x63>
  4013cc:	0f b6 03             	movzbl (%rbx),%eax
  4013cf:	84 c0                	test   %al,%al
  4013d1:	74 25                	je     4013f8 <strings_not_equal+0x50>
  4013d3:	3a 45 00             	cmp    0x0(%rbp),%al
  4013d6:	74 0a                	je     4013e2 <strings_not_equal+0x3a>
  4013d8:	eb 25                	jmp    4013ff <strings_not_equal+0x57>
  4013da:	3a 45 00             	cmp    0x0(%rbp),%al
  4013dd:	0f 1f 00             	nopl   (%rax)
  4013e0:	75 24                	jne    401406 <strings_not_equal+0x5e>
  4013e2:	48 83 c3 01          	add    $0x1,%rbx
  4013e6:	48 83 c5 01          	add    $0x1,%rbp
  4013ea:	0f b6 03             	movzbl (%rbx),%eax
  4013ed:	84 c0                	test   %al,%al
  4013ef:	75 e9                	jne    4013da <strings_not_equal+0x32>
  4013f1:	ba 00 00 00 00       	mov    $0x0,%edx
  4013f6:	eb 13                	jmp    40140b <strings_not_equal+0x63>
  4013f8:	ba 00 00 00 00       	mov    $0x0,%edx
  4013fd:	eb 0c                	jmp    40140b <strings_not_equal+0x63>
  4013ff:	ba 01 00 00 00       	mov    $0x1,%edx
  401404:	eb 05                	jmp    40140b <strings_not_equal+0x63>
  401406:	ba 01 00 00 00       	mov    $0x1,%edx
  40140b:	89 d0                	mov    %edx,%eax
  40140d:	5b                   	pop    %rbx
  40140e:	5d                   	pop    %rbp
  40140f:	41 5c                	pop    %r12
  401411:	c3                   	retq   

0000000000401412 <initialize_bomb>:
  401412:	53                   	push   %rbx
  401413:	48 81 ec 50 20 00 00 	sub    $0x2050,%rsp
  40141a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  401421:	00 00 
  401423:	48 89 84 24 48 20 00 	mov    %rax,0x2048(%rsp)
  40142a:	00 
  40142b:	31 c0                	xor    %eax,%eax
  40142d:	be 10 13 40 00       	mov    $0x401310,%esi
  401432:	bf 02 00 00 00       	mov    $0x2,%edi
  401437:	e8 04 f8 ff ff       	callq  400c40 <signal@plt>
  40143c:	be 40 00 00 00       	mov    $0x40,%esi
  401441:	48 89 e7             	mov    %rsp,%rdi
  401444:	e8 97 f8 ff ff       	callq  400ce0 <gethostname@plt>
  401449:	85 c0                	test   %eax,%eax
  40144b:	75 13                	jne    401460 <initialize_bomb+0x4e>
  40144d:	48 8b 3d 4c 43 20 00 	mov    0x20434c(%rip),%rdi        # 6057a0 <host_table>
  401454:	bb a8 57 60 00       	mov    $0x6057a8,%ebx
  401459:	48 85 ff             	test   %rdi,%rdi
  40145c:	75 16                	jne    401474 <initialize_bomb+0x62>
  40145e:	eb 52                	jmp    4014b2 <initialize_bomb+0xa0>
  401460:	bf 78 27 40 00       	mov    $0x402778,%edi
  401465:	e8 56 f7 ff ff       	callq  400bc0 <puts@plt>
  40146a:	bf 08 00 00 00       	mov    $0x8,%edi
  40146f:	e8 7c f8 ff ff       	callq  400cf0 <exit@plt>
  401474:	48 89 e6             	mov    %rsp,%rsi
  401477:	e8 14 f7 ff ff       	callq  400b90 <strcasecmp@plt>
  40147c:	85 c0                	test   %eax,%eax
  40147e:	74 46                	je     4014c6 <initialize_bomb+0xb4>
  401480:	48 83 c3 08          	add    $0x8,%rbx
  401484:	48 8b 7b f8          	mov    -0x8(%rbx),%rdi
  401488:	48 85 ff             	test   %rdi,%rdi
  40148b:	75 e7                	jne    401474 <initialize_bomb+0x62>
  40148d:	eb 23                	jmp    4014b2 <initialize_bomb+0xa0>
  40148f:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
  401494:	be 2a 29 40 00       	mov    $0x40292a,%esi
  401499:	bf 01 00 00 00       	mov    $0x1,%edi
  40149e:	b8 00 00 00 00       	mov    $0x0,%eax
  4014a3:	e8 18 f8 ff ff       	callq  400cc0 <__printf_chk@plt>
  4014a8:	bf 08 00 00 00       	mov    $0x8,%edi
  4014ad:	e8 3e f8 ff ff       	callq  400cf0 <exit@plt>
  4014b2:	bf b0 27 40 00       	mov    $0x4027b0,%edi
  4014b7:	e8 04 f7 ff ff       	callq  400bc0 <puts@plt>
  4014bc:	bf 08 00 00 00       	mov    $0x8,%edi
  4014c1:	e8 2a f8 ff ff       	callq  400cf0 <exit@plt>
  4014c6:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
  4014cb:	e8 62 0d 00 00       	callq  402232 <init_driver>
  4014d0:	85 c0                	test   %eax,%eax
  4014d2:	78 bb                	js     40148f <initialize_bomb+0x7d>
  4014d4:	48 8b 84 24 48 20 00 	mov    0x2048(%rsp),%rax
  4014db:	00 
  4014dc:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  4014e3:	00 00 
  4014e5:	74 05                	je     4014ec <initialize_bomb+0xda>
  4014e7:	e8 f4 f6 ff ff       	callq  400be0 <__stack_chk_fail@plt>
  4014ec:	48 81 c4 50 20 00 00 	add    $0x2050,%rsp
  4014f3:	5b                   	pop    %rbx
  4014f4:	c3                   	retq   

00000000004014f5 <initialize_bomb_solve>:
  4014f5:	f3 c3                	repz retq 

00000000004014f7 <blank_line>:
  4014f7:	55                   	push   %rbp
  4014f8:	53                   	push   %rbx
  4014f9:	48 83 ec 08          	sub    $0x8,%rsp
  4014fd:	48 89 fb             	mov    %rdi,%rbx
  401500:	eb 17                	jmp    401519 <blank_line+0x22>
  401502:	e8 29 f8 ff ff       	callq  400d30 <__ctype_b_loc@plt>
  401507:	48 83 c3 01          	add    $0x1,%rbx
  40150b:	48 0f be ed          	movsbq %bpl,%rbp
  40150f:	48 8b 00             	mov    (%rax),%rax
  401512:	f6 44 68 01 20       	testb  $0x20,0x1(%rax,%rbp,2)
  401517:	74 0f                	je     401528 <blank_line+0x31>
  401519:	0f b6 2b             	movzbl (%rbx),%ebp
  40151c:	40 84 ed             	test   %bpl,%bpl
  40151f:	75 e1                	jne    401502 <blank_line+0xb>
  401521:	b8 01 00 00 00       	mov    $0x1,%eax
  401526:	eb 05                	jmp    40152d <blank_line+0x36>
  401528:	b8 00 00 00 00       	mov    $0x0,%eax
  40152d:	48 83 c4 08          	add    $0x8,%rsp
  401531:	5b                   	pop    %rbx
  401532:	5d                   	pop    %rbp
  401533:	c3                   	retq   

0000000000401534 <skip>:
  401534:	53                   	push   %rbx
  401535:	48 63 05 a0 42 21 00 	movslq 0x2142a0(%rip),%rax        # 6157dc <num_input_strings>
  40153c:	48 8d 3c 80          	lea    (%rax,%rax,4),%rdi
  401540:	48 c1 e7 04          	shl    $0x4,%rdi
  401544:	48 81 c7 00 58 61 00 	add    $0x615800,%rdi
  40154b:	48 8b 15 8e 42 21 00 	mov    0x21428e(%rip),%rdx        # 6157e0 <infile>
  401552:	be 50 00 00 00       	mov    $0x50,%esi
  401557:	e8 d4 f6 ff ff       	callq  400c30 <fgets@plt>
  40155c:	48 89 c3             	mov    %rax,%rbx
  40155f:	48 85 c0             	test   %rax,%rax
  401562:	74 0c                	je     401570 <skip+0x3c>
  401564:	48 89 c7             	mov    %rax,%rdi
  401567:	e8 8b ff ff ff       	callq  4014f7 <blank_line>
  40156c:	85 c0                	test   %eax,%eax
  40156e:	75 c5                	jne    401535 <skip+0x1>
  401570:	48 89 d8             	mov    %rbx,%rax
  401573:	5b                   	pop    %rbx
  401574:	c3                   	retq   

0000000000401575 <send_msg>:
  401575:	48 81 ec 28 40 00 00 	sub    $0x4028,%rsp
  40157c:	41 89 f9             	mov    %edi,%r9d
  40157f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  401586:	00 00 
  401588:	48 89 84 24 18 40 00 	mov    %rax,0x4018(%rsp)
  40158f:	00 
  401590:	31 c0                	xor    %eax,%eax
  401592:	8b 35 44 42 21 00    	mov    0x214244(%rip),%esi        # 6157dc <num_input_strings>
  401598:	8d 46 ff             	lea    -0x1(%rsi),%eax
  40159b:	48 98                	cltq   
  40159d:	4c 8d 04 80          	lea    (%rax,%rax,4),%r8
  4015a1:	49 c1 e0 04          	shl    $0x4,%r8
  4015a5:	49 81 c0 00 58 61 00 	add    $0x615800,%r8
  4015ac:	4c 89 c7             	mov    %r8,%rdi
  4015af:	b8 00 00 00 00       	mov    $0x0,%eax
  4015b4:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  4015bb:	f2 ae                	repnz scas %es:(%rdi),%al
  4015bd:	48 f7 d1             	not    %rcx
  4015c0:	48 83 c1 63          	add    $0x63,%rcx
  4015c4:	48 81 f9 00 20 00 00 	cmp    $0x2000,%rcx
  4015cb:	76 19                	jbe    4015e6 <send_msg+0x71>
  4015cd:	be e8 27 40 00       	mov    $0x4027e8,%esi
  4015d2:	bf 01 00 00 00       	mov    $0x1,%edi
  4015d7:	e8 e4 f6 ff ff       	callq  400cc0 <__printf_chk@plt>
  4015dc:	bf 08 00 00 00       	mov    $0x8,%edi
  4015e1:	e8 0a f7 ff ff       	callq  400cf0 <exit@plt>
  4015e6:	45 85 c9             	test   %r9d,%r9d
  4015e9:	b8 44 29 40 00       	mov    $0x402944,%eax
  4015ee:	41 b9 4c 29 40 00    	mov    $0x40294c,%r9d
  4015f4:	4c 0f 45 c8          	cmovne %rax,%r9
  4015f8:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
  4015fd:	89 34 24             	mov    %esi,(%rsp)
  401600:	44 8b 05 79 41 20 00 	mov    0x204179(%rip),%r8d        # 605780 <bomb_id>
  401607:	b9 55 29 40 00       	mov    $0x402955,%ecx
  40160c:	ba 00 20 00 00       	mov    $0x2000,%edx
  401611:	be 01 00 00 00       	mov    $0x1,%esi
  401616:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
  40161b:	b8 00 00 00 00       	mov    $0x0,%eax
  401620:	e8 1b f7 ff ff       	callq  400d40 <__sprintf_chk@plt>
  401625:	48 8d 8c 24 10 20 00 	lea    0x2010(%rsp),%rcx
  40162c:	00 
  40162d:	ba 00 00 00 00       	mov    $0x0,%edx
  401632:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
  401637:	bf 80 53 60 00       	mov    $0x605380,%edi
  40163c:	e8 c6 0d 00 00       	callq  402407 <driver_post>
  401641:	85 c0                	test   %eax,%eax
  401643:	79 17                	jns    40165c <send_msg+0xe7>
  401645:	48 8d bc 24 10 20 00 	lea    0x2010(%rsp),%rdi
  40164c:	00 
  40164d:	e8 6e f5 ff ff       	callq  400bc0 <puts@plt>
  401652:	bf 00 00 00 00       	mov    $0x0,%edi
  401657:	e8 94 f6 ff ff       	callq  400cf0 <exit@plt>
  40165c:	48 8b 84 24 18 40 00 	mov    0x4018(%rsp),%rax
  401663:	00 
  401664:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  40166b:	00 00 
  40166d:	74 05                	je     401674 <send_msg+0xff>
  40166f:	e8 6c f5 ff ff       	callq  400be0 <__stack_chk_fail@plt>
  401674:	48 81 c4 28 40 00 00 	add    $0x4028,%rsp
  40167b:	c3                   	retq   

000000000040167c <explode_bomb>:
  40167c:	48 83 ec 08          	sub    $0x8,%rsp
  401680:	bf 61 29 40 00       	mov    $0x402961,%edi
  401685:	e8 36 f5 ff ff       	callq  400bc0 <puts@plt>
  40168a:	bf 6a 29 40 00       	mov    $0x40296a,%edi
  40168f:	e8 2c f5 ff ff       	callq  400bc0 <puts@plt>
  401694:	bf 00 00 00 00       	mov    $0x0,%edi
  401699:	e8 d7 fe ff ff       	callq  401575 <send_msg>
  40169e:	bf 10 28 40 00       	mov    $0x402810,%edi
  4016a3:	e8 18 f5 ff ff       	callq  400bc0 <puts@plt>
  4016a8:	bf 08 00 00 00       	mov    $0x8,%edi
  4016ad:	e8 3e f6 ff ff       	callq  400cf0 <exit@plt>

00000000004016b2 <read_six_numbers>:
  4016b2:	48 83 ec 18          	sub    $0x18,%rsp		#allocate space
  4016b6:	48 89 f2             	mov    %rsi,%rdx		#move param to register to work with it
  4016b9:	48 8d 4e 04          	lea    0x4(%rsi),%rcx		#4+firstvaraddr ====> rcx
  4016bd:	48 8d 46 14          	lea    0x14(%rsi),%rax		#14+firstvaraddr ===> rax(!returnval)
  4016c1:	48 89 44 24 08       	mov    %rax,0x8(%rsp)		#14+firstvaraddr ===> 8+stackpointeraddr
  4016c6:	48 8d 46 10          	lea    0x10(%rsi),%rax		#10+firstvaraddr ===> rax(return val?)
  4016ca:	48 89 04 24          	mov    %rax,(%rsp)		#10+firstvaraddr ===> where the stack pointer points to
  4016ce:	4c 8d 4e 0c          	lea    0xc(%rsi),%r9		#12+firstvaraddr ===> r9
  4016d2:	4c 8d 46 08          	lea    0x8(%rsi),%r8		#8+firstvaraddr ====> r8
  4016d6:	be 81 29 40 00       	mov    $0x402981,%esi		#what are we moving here????
  4016db:	b8 00 00 00 00       	mov    $0x0,%eax		#0 ===> eax(return val?)
  4016e0:	e8 cb f5 ff ff       	callq  400cb0 <__isoc99_sscanf@plt>	#have no clue what this function call does(something with init)
  4016e5:	83 f8 05             	cmp    $0x5,%eax			#returnval-5
  4016e8:	7f 05                	jg     4016ef <read_six_numbers+0x3d>	#if returnval > 5 goto done
  4016ea:	e8 8d ff ff ff       	callq  40167c <explode_bomb>		#else explodebomb
  4016ef:	48 83 c4 18          	add    $0x18,%rsp			#return to previous frame
  4016f3:	c3                   	retq   

00000000004016f4 <read_line>:
  4016f4:	48 83 ec 08          	sub    $0x8,%rsp
  4016f8:	b8 00 00 00 00       	mov    $0x0,%eax
  4016fd:	e8 32 fe ff ff       	callq  401534 <skip>
  401702:	48 85 c0             	test   %rax,%rax
  401705:	75 6e                	jne    401775 <read_line+0x81>
  401707:	48 8b 05 ba 40 21 00 	mov    0x2140ba(%rip),%rax        # 6157c8 <stdin@@GLIBC_2.2.5>
  40170e:	48 39 05 cb 40 21 00 	cmp    %rax,0x2140cb(%rip)        # 6157e0 <infile>
  401715:	75 14                	jne    40172b <read_line+0x37>
  401717:	bf 93 29 40 00       	mov    $0x402993,%edi
  40171c:	e8 9f f4 ff ff       	callq  400bc0 <puts@plt>
  401721:	bf 08 00 00 00       	mov    $0x8,%edi
  401726:	e8 c5 f5 ff ff       	callq  400cf0 <exit@plt>
  40172b:	bf b1 29 40 00       	mov    $0x4029b1,%edi
  401730:	e8 4b f4 ff ff       	callq  400b80 <getenv@plt>
  401735:	48 85 c0             	test   %rax,%rax
  401738:	74 0a                	je     401744 <read_line+0x50>
  40173a:	bf 00 00 00 00       	mov    $0x0,%edi
  40173f:	e8 ac f5 ff ff       	callq  400cf0 <exit@plt>
  401744:	48 8b 05 7d 40 21 00 	mov    0x21407d(%rip),%rax        # 6157c8 <stdin@@GLIBC_2.2.5>
  40174b:	48 89 05 8e 40 21 00 	mov    %rax,0x21408e(%rip)        # 6157e0 <infile>
  401752:	b8 00 00 00 00       	mov    $0x0,%eax
  401757:	e8 d8 fd ff ff       	callq  401534 <skip>
  40175c:	48 85 c0             	test   %rax,%rax
  40175f:	75 14                	jne    401775 <read_line+0x81>
  401761:	bf 93 29 40 00       	mov    $0x402993,%edi
  401766:	e8 55 f4 ff ff       	callq  400bc0 <puts@plt>
  40176b:	bf 00 00 00 00       	mov    $0x0,%edi
  401770:	e8 7b f5 ff ff       	callq  400cf0 <exit@plt>
  401775:	8b 15 61 40 21 00    	mov    0x214061(%rip),%edx        # 6157dc <num_input_strings>
  40177b:	48 63 c2             	movslq %edx,%rax
  40177e:	48 8d 34 80          	lea    (%rax,%rax,4),%rsi
  401782:	48 c1 e6 04          	shl    $0x4,%rsi
  401786:	48 81 c6 00 58 61 00 	add    $0x615800,%rsi
  40178d:	48 89 f7             	mov    %rsi,%rdi
  401790:	b8 00 00 00 00       	mov    $0x0,%eax
  401795:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  40179c:	f2 ae                	repnz scas %es:(%rdi),%al
  40179e:	48 f7 d1             	not    %rcx
  4017a1:	48 83 e9 01          	sub    $0x1,%rcx
  4017a5:	83 f9 4e             	cmp    $0x4e,%ecx
  4017a8:	7e 46                	jle    4017f0 <read_line+0xfc>
  4017aa:	bf bc 29 40 00       	mov    $0x4029bc,%edi
  4017af:	e8 0c f4 ff ff       	callq  400bc0 <puts@plt>
  4017b4:	8b 05 22 40 21 00    	mov    0x214022(%rip),%eax        # 6157dc <num_input_strings>
  4017ba:	8d 50 01             	lea    0x1(%rax),%edx
  4017bd:	89 15 19 40 21 00    	mov    %edx,0x214019(%rip)        # 6157dc <num_input_strings>
  4017c3:	48 98                	cltq   
  4017c5:	48 6b c0 50          	imul   $0x50,%rax,%rax
  4017c9:	48 bf 2a 2a 2a 74 72 	movabs $0x636e7572742a2a2a,%rdi
  4017d0:	75 6e 63 
  4017d3:	48 89 b8 00 58 61 00 	mov    %rdi,0x615800(%rax)
  4017da:	48 bf 61 74 65 64 2a 	movabs $0x2a2a2a64657461,%rdi
  4017e1:	2a 2a 00 
  4017e4:	48 89 b8 08 58 61 00 	mov    %rdi,0x615808(%rax)
  4017eb:	e8 8c fe ff ff       	callq  40167c <explode_bomb>
  4017f0:	83 e9 01             	sub    $0x1,%ecx
  4017f3:	48 63 c9             	movslq %ecx,%rcx
  4017f6:	48 63 c2             	movslq %edx,%rax
  4017f9:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
  4017fd:	48 c1 e0 04          	shl    $0x4,%rax
  401801:	c6 84 01 00 58 61 00 	movb   $0x0,0x615800(%rcx,%rax,1)
  401808:	00 
  401809:	83 c2 01             	add    $0x1,%edx
  40180c:	89 15 ca 3f 21 00    	mov    %edx,0x213fca(%rip)        # 6157dc <num_input_strings>
  401812:	48 89 f0             	mov    %rsi,%rax
  401815:	48 83 c4 08          	add    $0x8,%rsp
  401819:	c3                   	retq   

000000000040181a <phase_defused>:
  40181a:	48 83 ec 78          	sub    $0x78,%rsp
  40181e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  401825:	00 00 
  401827:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
  40182c:	31 c0                	xor    %eax,%eax
  40182e:	bf 01 00 00 00       	mov    $0x1,%edi
  401833:	e8 3d fd ff ff       	callq  401575 <send_msg>
  401838:	83 3d 9d 3f 21 00 06 	cmpl   $0x6,0x213f9d(%rip)        # 6157dc <num_input_strings>
  40183f:	75 6d                	jne    4018ae <phase_defused+0x94>
  401841:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
  401846:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
  40184b:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  401850:	be d7 29 40 00       	mov    $0x4029d7,%esi
  401855:	bf f0 58 61 00       	mov    $0x6158f0,%edi
  40185a:	b8 00 00 00 00       	mov    $0x0,%eax
  40185f:	e8 4c f4 ff ff       	callq  400cb0 <__isoc99_sscanf@plt>
  401864:	83 f8 03             	cmp    $0x3,%eax
  401867:	75 31                	jne    40189a <phase_defused+0x80>
  401869:	be e0 29 40 00       	mov    $0x4029e0,%esi
  40186e:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
  401873:	e8 30 fb ff ff       	callq  4013a8 <strings_not_equal>
  401878:	85 c0                	test   %eax,%eax
  40187a:	75 1e                	jne    40189a <phase_defused+0x80>
  40187c:	bf 38 28 40 00       	mov    $0x402838,%edi
  401881:	e8 3a f3 ff ff       	callq  400bc0 <puts@plt>
  401886:	bf 60 28 40 00       	mov    $0x402860,%edi
  40188b:	e8 30 f3 ff ff       	callq  400bc0 <puts@plt>
  401890:	b8 00 00 00 00       	mov    $0x0,%eax
  401895:	e8 19 fa ff ff       	callq  4012b3 <secret_phase>
  40189a:	bf 98 28 40 00       	mov    $0x402898,%edi
  40189f:	e8 1c f3 ff ff       	callq  400bc0 <puts@plt>
  4018a4:	bf c8 28 40 00       	mov    $0x4028c8,%edi
  4018a9:	e8 12 f3 ff ff       	callq  400bc0 <puts@plt>
  4018ae:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
  4018b3:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  4018ba:	00 00 
  4018bc:	74 05                	je     4018c3 <phase_defused+0xa9>
  4018be:	e8 1d f3 ff ff       	callq  400be0 <__stack_chk_fail@plt>
  4018c3:	48 83 c4 78          	add    $0x78,%rsp
  4018c7:	c3                   	retq   
  4018c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4018cf:	00 

00000000004018d0 <sigalrm_handler>:
  4018d0:	48 83 ec 08          	sub    $0x8,%rsp
  4018d4:	b9 00 00 00 00       	mov    $0x0,%ecx
  4018d9:	ba 90 39 40 00       	mov    $0x403990,%edx
  4018de:	be 01 00 00 00       	mov    $0x1,%esi
  4018e3:	48 8b 3d e6 3e 21 00 	mov    0x213ee6(%rip),%rdi        # 6157d0 <stderr@@GLIBC_2.2.5>
  4018ea:	b8 00 00 00 00       	mov    $0x0,%eax
  4018ef:	e8 1c f4 ff ff       	callq  400d10 <__fprintf_chk@plt>
  4018f4:	bf 01 00 00 00       	mov    $0x1,%edi
  4018f9:	e8 f2 f3 ff ff       	callq  400cf0 <exit@plt>

00000000004018fe <rio_readlineb>:
  4018fe:	41 57                	push   %r15
  401900:	41 56                	push   %r14
  401902:	41 55                	push   %r13
  401904:	41 54                	push   %r12
  401906:	55                   	push   %rbp
  401907:	53                   	push   %rbx
  401908:	48 83 ec 38          	sub    $0x38,%rsp
  40190c:	49 89 f6             	mov    %rsi,%r14
  40190f:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
  401914:	48 83 fa 01          	cmp    $0x1,%rdx
  401918:	0f 86 c9 00 00 00    	jbe    4019e7 <rio_readlineb+0xe9>
  40191e:	48 89 fb             	mov    %rdi,%rbx
  401921:	41 bd 01 00 00 00    	mov    $0x1,%r13d
  401927:	4c 8d 67 10          	lea    0x10(%rdi),%r12
  40192b:	eb 30                	jmp    40195d <rio_readlineb+0x5f>
  40192d:	ba 00 20 00 00       	mov    $0x2000,%edx
  401932:	4c 89 e6             	mov    %r12,%rsi
  401935:	8b 3b                	mov    (%rbx),%edi
  401937:	e8 d4 f2 ff ff       	callq  400c10 <read@plt>
  40193c:	89 43 04             	mov    %eax,0x4(%rbx)
  40193f:	85 c0                	test   %eax,%eax
  401941:	79 12                	jns    401955 <rio_readlineb+0x57>
  401943:	e8 58 f2 ff ff       	callq  400ba0 <__errno_location@plt>
  401948:	83 38 04             	cmpl   $0x4,(%rax)
  40194b:	74 10                	je     40195d <rio_readlineb+0x5f>
  40194d:	0f 1f 00             	nopl   (%rax)
  401950:	e9 a1 00 00 00       	jmpq   4019f6 <rio_readlineb+0xf8>
  401955:	85 c0                	test   %eax,%eax
  401957:	74 71                	je     4019ca <rio_readlineb+0xcc>
  401959:	4c 89 63 08          	mov    %r12,0x8(%rbx)
  40195d:	8b 6b 04             	mov    0x4(%rbx),%ebp
  401960:	85 ed                	test   %ebp,%ebp
  401962:	7e c9                	jle    40192d <rio_readlineb+0x2f>
  401964:	85 ed                	test   %ebp,%ebp
  401966:	41 0f 95 c7          	setne  %r15b
  40196a:	41 0f b6 c7          	movzbl %r15b,%eax
  40196e:	89 44 24 0c          	mov    %eax,0xc(%rsp)
  401972:	45 0f b6 ff          	movzbl %r15b,%r15d
  401976:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
  40197a:	48 89 ce             	mov    %rcx,%rsi
  40197d:	b9 01 00 00 00       	mov    $0x1,%ecx
  401982:	4c 89 fa             	mov    %r15,%rdx
  401985:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
  40198a:	48 8d 7c 24 2f       	lea    0x2f(%rsp),%rdi
  40198f:	e8 dc f2 ff ff       	callq  400c70 <__memcpy_chk@plt>
  401994:	4c 03 7c 24 10       	add    0x10(%rsp),%r15
  401999:	4c 89 7b 08          	mov    %r15,0x8(%rbx)
  40199d:	8b 44 24 0c          	mov    0xc(%rsp),%eax
  4019a1:	29 c5                	sub    %eax,%ebp
  4019a3:	89 6b 04             	mov    %ebp,0x4(%rbx)
  4019a6:	83 f8 01             	cmp    $0x1,%eax
  4019a9:	75 13                	jne    4019be <rio_readlineb+0xc0>
  4019ab:	49 83 c6 01          	add    $0x1,%r14
  4019af:	0f b6 44 24 2f       	movzbl 0x2f(%rsp),%eax
  4019b4:	41 88 46 ff          	mov    %al,-0x1(%r14)
  4019b8:	3c 0a                	cmp    $0xa,%al
  4019ba:	75 18                	jne    4019d4 <rio_readlineb+0xd6>
  4019bc:	eb 2f                	jmp    4019ed <rio_readlineb+0xef>
  4019be:	83 7c 24 0c 00       	cmpl   $0x0,0xc(%rsp)
  4019c3:	75 3a                	jne    4019ff <rio_readlineb+0x101>
  4019c5:	44 89 e8             	mov    %r13d,%eax
  4019c8:	eb 03                	jmp    4019cd <rio_readlineb+0xcf>
  4019ca:	44 89 e8             	mov    %r13d,%eax
  4019cd:	83 f8 01             	cmp    $0x1,%eax
  4019d0:	75 1b                	jne    4019ed <rio_readlineb+0xef>
  4019d2:	eb 34                	jmp    401a08 <rio_readlineb+0x10a>
  4019d4:	41 83 c5 01          	add    $0x1,%r13d
  4019d8:	49 63 c5             	movslq %r13d,%rax
  4019db:	48 3b 44 24 18       	cmp    0x18(%rsp),%rax
  4019e0:	73 0b                	jae    4019ed <rio_readlineb+0xef>
  4019e2:	e9 76 ff ff ff       	jmpq   40195d <rio_readlineb+0x5f>
  4019e7:	41 bd 01 00 00 00    	mov    $0x1,%r13d
  4019ed:	41 c6 06 00          	movb   $0x0,(%r14)
  4019f1:	49 63 c5             	movslq %r13d,%rax
  4019f4:	eb 17                	jmp    401a0d <rio_readlineb+0x10f>
  4019f6:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
  4019fd:	eb 0e                	jmp    401a0d <rio_readlineb+0x10f>
  4019ff:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
  401a06:	eb 05                	jmp    401a0d <rio_readlineb+0x10f>
  401a08:	b8 00 00 00 00       	mov    $0x0,%eax
  401a0d:	48 83 c4 38          	add    $0x38,%rsp
  401a11:	5b                   	pop    %rbx
  401a12:	5d                   	pop    %rbp
  401a13:	41 5c                	pop    %r12
  401a15:	41 5d                	pop    %r13
  401a17:	41 5e                	pop    %r14
  401a19:	41 5f                	pop    %r15
  401a1b:	c3                   	retq   

0000000000401a1c <submitr>:
  401a1c:	41 57                	push   %r15
  401a1e:	41 56                	push   %r14
  401a20:	41 55                	push   %r13
  401a22:	41 54                	push   %r12
  401a24:	55                   	push   %rbp
  401a25:	53                   	push   %rbx
  401a26:	48 81 ec 68 a0 00 00 	sub    $0xa068,%rsp
  401a2d:	48 89 fd             	mov    %rdi,%rbp
  401a30:	41 89 f5             	mov    %esi,%r13d
  401a33:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
  401a38:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
  401a3d:	4d 89 c7             	mov    %r8,%r15
  401a40:	4c 89 cb             	mov    %r9,%rbx
  401a43:	4c 8b b4 24 a0 a0 00 	mov    0xa0a0(%rsp),%r14
  401a4a:	00 
  401a4b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  401a52:	00 00 
  401a54:	48 89 84 24 58 a0 00 	mov    %rax,0xa058(%rsp)
  401a5b:	00 
  401a5c:	31 c0                	xor    %eax,%eax
  401a5e:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%rsp)
  401a65:	00 
  401a66:	ba 00 00 00 00       	mov    $0x0,%edx
  401a6b:	be 01 00 00 00       	mov    $0x1,%esi
  401a70:	bf 02 00 00 00       	mov    $0x2,%edi
  401a75:	e8 d6 f2 ff ff       	callq  400d50 <socket@plt>
  401a7a:	41 89 c4             	mov    %eax,%r12d
  401a7d:	85 c0                	test   %eax,%eax
  401a7f:	79 50                	jns    401ad1 <submitr+0xb5>
  401a81:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  401a88:	3a 20 43 
  401a8b:	49 89 06             	mov    %rax,(%r14)
  401a8e:	48 b8 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rax
  401a95:	20 75 6e 
  401a98:	49 89 46 08          	mov    %rax,0x8(%r14)
  401a9c:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  401aa3:	74 6f 20 
  401aa6:	49 89 46 10          	mov    %rax,0x10(%r14)
  401aaa:	48 b8 63 72 65 61 74 	movabs $0x7320657461657263,%rax
  401ab1:	65 20 73 
  401ab4:	49 89 46 18          	mov    %rax,0x18(%r14)
  401ab8:	41 c7 46 20 6f 63 6b 	movl   $0x656b636f,0x20(%r14)
  401abf:	65 
  401ac0:	66 41 c7 46 24 74 00 	movw   $0x74,0x24(%r14)
  401ac7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401acc:	e9 11 06 00 00       	jmpq   4020e2 <submitr+0x6c6>
  401ad1:	48 89 ef             	mov    %rbp,%rdi
  401ad4:	e8 77 f1 ff ff       	callq  400c50 <gethostbyname@plt>
  401ad9:	48 85 c0             	test   %rax,%rax
  401adc:	75 6b                	jne    401b49 <submitr+0x12d>
  401ade:	48 b8 45 72 72 6f 72 	movabs $0x44203a726f727245,%rax
  401ae5:	3a 20 44 
  401ae8:	49 89 06             	mov    %rax,(%r14)
  401aeb:	48 b8 4e 53 20 69 73 	movabs $0x6e7520736920534e,%rax
  401af2:	20 75 6e 
  401af5:	49 89 46 08          	mov    %rax,0x8(%r14)
  401af9:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  401b00:	74 6f 20 
  401b03:	49 89 46 10          	mov    %rax,0x10(%r14)
  401b07:	48 b8 72 65 73 6f 6c 	movabs $0x2065766c6f736572,%rax
  401b0e:	76 65 20 
  401b11:	49 89 46 18          	mov    %rax,0x18(%r14)
  401b15:	48 b8 73 65 72 76 65 	movabs $0x6120726576726573,%rax
  401b1c:	72 20 61 
  401b1f:	49 89 46 20          	mov    %rax,0x20(%r14)
  401b23:	41 c7 46 28 64 64 72 	movl   $0x65726464,0x28(%r14)
  401b2a:	65 
  401b2b:	66 41 c7 46 2c 73 73 	movw   $0x7373,0x2c(%r14)
  401b32:	41 c6 46 2e 00       	movb   $0x0,0x2e(%r14)
  401b37:	44 89 e7             	mov    %r12d,%edi
  401b3a:	e8 c1 f0 ff ff       	callq  400c00 <close@plt>
  401b3f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401b44:	e9 99 05 00 00       	jmpq   4020e2 <submitr+0x6c6>
  401b49:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
  401b50:	00 00 
  401b52:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
  401b59:	00 00 
  401b5b:	66 c7 44 24 30 02 00 	movw   $0x2,0x30(%rsp)
  401b62:	48 63 50 14          	movslq 0x14(%rax),%rdx
  401b66:	48 8b 40 18          	mov    0x18(%rax),%rax
  401b6a:	48 8d 7c 24 34       	lea    0x34(%rsp),%rdi
  401b6f:	b9 0c 00 00 00       	mov    $0xc,%ecx
  401b74:	48 8b 30             	mov    (%rax),%rsi
  401b77:	e8 e4 f0 ff ff       	callq  400c60 <__memmove_chk@plt>
  401b7c:	66 41 c1 cd 08       	ror    $0x8,%r13w
  401b81:	66 44 89 6c 24 32    	mov    %r13w,0x32(%rsp)
  401b87:	ba 10 00 00 00       	mov    $0x10,%edx
  401b8c:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
  401b91:	44 89 e7             	mov    %r12d,%edi
  401b94:	e8 67 f1 ff ff       	callq  400d00 <connect@plt>
  401b99:	85 c0                	test   %eax,%eax
  401b9b:	79 5d                	jns    401bfa <submitr+0x1de>
  401b9d:	48 b8 45 72 72 6f 72 	movabs $0x55203a726f727245,%rax
  401ba4:	3a 20 55 
  401ba7:	49 89 06             	mov    %rax,(%r14)
  401baa:	48 b8 6e 61 62 6c 65 	movabs $0x6f7420656c62616e,%rax
  401bb1:	20 74 6f 
  401bb4:	49 89 46 08          	mov    %rax,0x8(%r14)
  401bb8:	48 b8 20 63 6f 6e 6e 	movabs $0x7463656e6e6f6320,%rax
  401bbf:	65 63 74 
  401bc2:	49 89 46 10          	mov    %rax,0x10(%r14)
  401bc6:	48 b8 20 74 6f 20 74 	movabs $0x20656874206f7420,%rax
  401bcd:	68 65 20 
  401bd0:	49 89 46 18          	mov    %rax,0x18(%r14)
  401bd4:	41 c7 46 20 73 65 72 	movl   $0x76726573,0x20(%r14)
  401bdb:	76 
  401bdc:	66 41 c7 46 24 65 72 	movw   $0x7265,0x24(%r14)
  401be3:	41 c6 46 26 00       	movb   $0x0,0x26(%r14)
  401be8:	44 89 e7             	mov    %r12d,%edi
  401beb:	e8 10 f0 ff ff       	callq  400c00 <close@plt>
  401bf0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401bf5:	e9 e8 04 00 00       	jmpq   4020e2 <submitr+0x6c6>
  401bfa:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
  401c01:	48 89 df             	mov    %rbx,%rdi
  401c04:	b8 00 00 00 00       	mov    $0x0,%eax
  401c09:	48 89 d1             	mov    %rdx,%rcx
  401c0c:	f2 ae                	repnz scas %es:(%rdi),%al
  401c0e:	48 f7 d1             	not    %rcx
  401c11:	48 89 ce             	mov    %rcx,%rsi
  401c14:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  401c19:	48 89 d1             	mov    %rdx,%rcx
  401c1c:	f2 ae                	repnz scas %es:(%rdi),%al
  401c1e:	49 89 c8             	mov    %rcx,%r8
  401c21:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  401c26:	48 89 d1             	mov    %rdx,%rcx
  401c29:	f2 ae                	repnz scas %es:(%rdi),%al
  401c2b:	48 f7 d1             	not    %rcx
  401c2e:	49 89 c9             	mov    %rcx,%r9
  401c31:	4c 89 ff             	mov    %r15,%rdi
  401c34:	48 89 d1             	mov    %rdx,%rcx
  401c37:	f2 ae                	repnz scas %es:(%rdi),%al
  401c39:	4d 29 c1             	sub    %r8,%r9
  401c3c:	49 29 c9             	sub    %rcx,%r9
  401c3f:	48 8d 44 76 fd       	lea    -0x3(%rsi,%rsi,2),%rax
  401c44:	49 8d 44 01 7b       	lea    0x7b(%r9,%rax,1),%rax
  401c49:	48 3d 00 20 00 00    	cmp    $0x2000,%rax
  401c4f:	76 73                	jbe    401cc4 <submitr+0x2a8>
  401c51:	48 b8 45 72 72 6f 72 	movabs $0x52203a726f727245,%rax
  401c58:	3a 20 52 
  401c5b:	49 89 06             	mov    %rax,(%r14)
  401c5e:	48 b8 65 73 75 6c 74 	movabs $0x747320746c757365,%rax
  401c65:	20 73 74 
  401c68:	49 89 46 08          	mov    %rax,0x8(%r14)
  401c6c:	48 b8 72 69 6e 67 20 	movabs $0x6f6f7420676e6972,%rax
  401c73:	74 6f 6f 
  401c76:	49 89 46 10          	mov    %rax,0x10(%r14)
  401c7a:	48 b8 20 6c 61 72 67 	movabs $0x202e656772616c20,%rax
  401c81:	65 2e 20 
  401c84:	49 89 46 18          	mov    %rax,0x18(%r14)
  401c88:	48 b8 49 6e 63 72 65 	movabs $0x6573616572636e49,%rax
  401c8f:	61 73 65 
  401c92:	49 89 46 20          	mov    %rax,0x20(%r14)
  401c96:	48 b8 20 53 55 42 4d 	movabs $0x5254494d42555320,%rax
  401c9d:	49 54 52 
  401ca0:	49 89 46 28          	mov    %rax,0x28(%r14)
  401ca4:	48 b8 5f 4d 41 58 42 	movabs $0x46554258414d5f,%rax
  401cab:	55 46 00 
  401cae:	49 89 46 30          	mov    %rax,0x30(%r14)
  401cb2:	44 89 e7             	mov    %r12d,%edi
  401cb5:	e8 46 ef ff ff       	callq  400c00 <close@plt>
  401cba:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401cbf:	e9 1e 04 00 00       	jmpq   4020e2 <submitr+0x6c6>
  401cc4:	48 8d 94 24 40 20 00 	lea    0x2040(%rsp),%rdx
  401ccb:	00 
  401ccc:	b9 00 04 00 00       	mov    $0x400,%ecx
  401cd1:	b8 00 00 00 00       	mov    $0x0,%eax
  401cd6:	48 89 d7             	mov    %rdx,%rdi
  401cd9:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  401cdc:	48 89 df             	mov    %rbx,%rdi
  401cdf:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  401ce6:	f2 ae                	repnz scas %es:(%rdi),%al
  401ce8:	48 f7 d1             	not    %rcx
  401ceb:	48 83 e9 01          	sub    $0x1,%rcx
  401cef:	85 c9                	test   %ecx,%ecx
  401cf1:	0f 84 07 04 00 00    	je     4020fe <submitr+0x6e2>
  401cf7:	83 e9 01             	sub    $0x1,%ecx
  401cfa:	4c 8d 6c 0b 01       	lea    0x1(%rbx,%rcx,1),%r13
  401cff:	48 89 d5             	mov    %rdx,%rbp
  401d02:	44 0f b6 03          	movzbl (%rbx),%r8d
  401d06:	41 80 f8 2a          	cmp    $0x2a,%r8b
  401d0a:	74 23                	je     401d2f <submitr+0x313>
  401d0c:	41 8d 40 d3          	lea    -0x2d(%r8),%eax
  401d10:	3c 01                	cmp    $0x1,%al
  401d12:	76 1b                	jbe    401d2f <submitr+0x313>
  401d14:	41 80 f8 5f          	cmp    $0x5f,%r8b
  401d18:	74 15                	je     401d2f <submitr+0x313>
  401d1a:	41 8d 40 d0          	lea    -0x30(%r8),%eax
  401d1e:	3c 09                	cmp    $0x9,%al
  401d20:	76 0d                	jbe    401d2f <submitr+0x313>
  401d22:	44 89 c0             	mov    %r8d,%eax
  401d25:	83 e0 df             	and    $0xffffffdf,%eax
  401d28:	83 e8 41             	sub    $0x41,%eax
  401d2b:	3c 19                	cmp    $0x19,%al
  401d2d:	77 0a                	ja     401d39 <submitr+0x31d>
  401d2f:	48 8d 45 01          	lea    0x1(%rbp),%rax
  401d33:	44 88 45 00          	mov    %r8b,0x0(%rbp)
  401d37:	eb 6c                	jmp    401da5 <submitr+0x389>
  401d39:	41 80 f8 20          	cmp    $0x20,%r8b
  401d3d:	75 0a                	jne    401d49 <submitr+0x32d>
  401d3f:	48 8d 45 01          	lea    0x1(%rbp),%rax
  401d43:	c6 45 00 2b          	movb   $0x2b,0x0(%rbp)
  401d47:	eb 5c                	jmp    401da5 <submitr+0x389>
  401d49:	41 8d 40 e0          	lea    -0x20(%r8),%eax
  401d4d:	3c 5f                	cmp    $0x5f,%al
  401d4f:	76 0a                	jbe    401d5b <submitr+0x33f>
  401d51:	41 80 f8 09          	cmp    $0x9,%r8b
  401d55:	0f 85 0c 04 00 00    	jne    402167 <submitr+0x74b>
  401d5b:	45 0f b6 c0          	movzbl %r8b,%r8d
  401d5f:	b9 60 3a 40 00       	mov    $0x403a60,%ecx
  401d64:	ba 08 00 00 00       	mov    $0x8,%edx
  401d69:	be 01 00 00 00       	mov    $0x1,%esi
  401d6e:	48 8d bc 24 40 80 00 	lea    0x8040(%rsp),%rdi
  401d75:	00 
  401d76:	b8 00 00 00 00       	mov    $0x0,%eax
  401d7b:	e8 c0 ef ff ff       	callq  400d40 <__sprintf_chk@plt>
  401d80:	0f b6 84 24 40 80 00 	movzbl 0x8040(%rsp),%eax
  401d87:	00 
  401d88:	88 45 00             	mov    %al,0x0(%rbp)
  401d8b:	0f b6 84 24 41 80 00 	movzbl 0x8041(%rsp),%eax
  401d92:	00 
  401d93:	88 45 01             	mov    %al,0x1(%rbp)
  401d96:	48 8d 45 03          	lea    0x3(%rbp),%rax
  401d9a:	0f b6 94 24 42 80 00 	movzbl 0x8042(%rsp),%edx
  401da1:	00 
  401da2:	88 55 02             	mov    %dl,0x2(%rbp)
  401da5:	48 83 c3 01          	add    $0x1,%rbx
  401da9:	4c 39 eb             	cmp    %r13,%rbx
  401dac:	0f 84 4c 03 00 00    	je     4020fe <submitr+0x6e2>
  401db2:	48 89 c5             	mov    %rax,%rbp
  401db5:	e9 48 ff ff ff       	jmpq   401d02 <submitr+0x2e6>
  401dba:	48 89 da             	mov    %rbx,%rdx
  401dbd:	48 89 ee             	mov    %rbp,%rsi
  401dc0:	44 89 e7             	mov    %r12d,%edi
  401dc3:	e8 08 ee ff ff       	callq  400bd0 <write@plt>
  401dc8:	48 85 c0             	test   %rax,%rax
  401dcb:	7f 0f                	jg     401ddc <submitr+0x3c0>
  401dcd:	e8 ce ed ff ff       	callq  400ba0 <__errno_location@plt>
  401dd2:	83 38 04             	cmpl   $0x4,(%rax)
  401dd5:	75 12                	jne    401de9 <submitr+0x3cd>
  401dd7:	b8 00 00 00 00       	mov    $0x0,%eax
  401ddc:	48 01 c5             	add    %rax,%rbp
  401ddf:	48 29 c3             	sub    %rax,%rbx
  401de2:	75 d6                	jne    401dba <submitr+0x39e>
  401de4:	4d 85 ed             	test   %r13,%r13
  401de7:	79 5f                	jns    401e48 <submitr+0x42c>
  401de9:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  401df0:	3a 20 43 
  401df3:	49 89 06             	mov    %rax,(%r14)
  401df6:	48 b8 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rax
  401dfd:	20 75 6e 
  401e00:	49 89 46 08          	mov    %rax,0x8(%r14)
  401e04:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  401e0b:	74 6f 20 
  401e0e:	49 89 46 10          	mov    %rax,0x10(%r14)
  401e12:	48 b8 77 72 69 74 65 	movabs $0x6f74206574697277,%rax
  401e19:	20 74 6f 
  401e1c:	49 89 46 18          	mov    %rax,0x18(%r14)
  401e20:	48 b8 20 74 68 65 20 	movabs $0x7265732065687420,%rax
  401e27:	73 65 72 
  401e2a:	49 89 46 20          	mov    %rax,0x20(%r14)
  401e2e:	41 c7 46 28 76 65 72 	movl   $0x726576,0x28(%r14)
  401e35:	00 
  401e36:	44 89 e7             	mov    %r12d,%edi
  401e39:	e8 c2 ed ff ff       	callq  400c00 <close@plt>
  401e3e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401e43:	e9 9a 02 00 00       	jmpq   4020e2 <submitr+0x6c6>
  401e48:	44 89 a4 24 40 80 00 	mov    %r12d,0x8040(%rsp)
  401e4f:	00 
  401e50:	c7 84 24 44 80 00 00 	movl   $0x0,0x8044(%rsp)
  401e57:	00 00 00 00 
  401e5b:	48 8d 84 24 50 80 00 	lea    0x8050(%rsp),%rax
  401e62:	00 
  401e63:	48 89 84 24 48 80 00 	mov    %rax,0x8048(%rsp)
  401e6a:	00 
  401e6b:	ba 00 20 00 00       	mov    $0x2000,%edx
  401e70:	48 8d 74 24 40       	lea    0x40(%rsp),%rsi
  401e75:	48 8d bc 24 40 80 00 	lea    0x8040(%rsp),%rdi
  401e7c:	00 
  401e7d:	e8 7c fa ff ff       	callq  4018fe <rio_readlineb>
  401e82:	48 85 c0             	test   %rax,%rax
  401e85:	7f 74                	jg     401efb <submitr+0x4df>
  401e87:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  401e8e:	3a 20 43 
  401e91:	49 89 06             	mov    %rax,(%r14)
  401e94:	48 b8 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rax
  401e9b:	20 75 6e 
  401e9e:	49 89 46 08          	mov    %rax,0x8(%r14)
  401ea2:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  401ea9:	74 6f 20 
  401eac:	49 89 46 10          	mov    %rax,0x10(%r14)
  401eb0:	48 b8 72 65 61 64 20 	movabs $0x7269662064616572,%rax
  401eb7:	66 69 72 
  401eba:	49 89 46 18          	mov    %rax,0x18(%r14)
  401ebe:	48 b8 73 74 20 68 65 	movabs $0x6564616568207473,%rax
  401ec5:	61 64 65 
  401ec8:	49 89 46 20          	mov    %rax,0x20(%r14)
  401ecc:	48 b8 72 20 66 72 6f 	movabs $0x73206d6f72662072,%rax
  401ed3:	6d 20 73 
  401ed6:	49 89 46 28          	mov    %rax,0x28(%r14)
  401eda:	41 c7 46 30 65 72 76 	movl   $0x65767265,0x30(%r14)
  401ee1:	65 
  401ee2:	66 41 c7 46 34 72 00 	movw   $0x72,0x34(%r14)
  401ee9:	44 89 e7             	mov    %r12d,%edi
  401eec:	e8 0f ed ff ff       	callq  400c00 <close@plt>
  401ef1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401ef6:	e9 e7 01 00 00       	jmpq   4020e2 <submitr+0x6c6>
  401efb:	4c 8d 84 24 40 60 00 	lea    0x6040(%rsp),%r8
  401f02:	00 
  401f03:	48 8d 4c 24 2c       	lea    0x2c(%rsp),%rcx
  401f08:	48 8d 94 24 40 40 00 	lea    0x4040(%rsp),%rdx
  401f0f:	00 
  401f10:	be 67 3a 40 00       	mov    $0x403a67,%esi
  401f15:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
  401f1a:	b8 00 00 00 00       	mov    $0x0,%eax
  401f1f:	e8 8c ed ff ff       	callq  400cb0 <__isoc99_sscanf@plt>
  401f24:	44 8b 44 24 2c       	mov    0x2c(%rsp),%r8d
  401f29:	41 81 f8 c8 00 00 00 	cmp    $0xc8,%r8d
  401f30:	0f 84 be 00 00 00    	je     401ff4 <submitr+0x5d8>
  401f36:	4c 8d 8c 24 40 60 00 	lea    0x6040(%rsp),%r9
  401f3d:	00 
  401f3e:	b9 b8 39 40 00       	mov    $0x4039b8,%ecx
  401f43:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
  401f4a:	be 01 00 00 00       	mov    $0x1,%esi
  401f4f:	4c 89 f7             	mov    %r14,%rdi
  401f52:	b8 00 00 00 00       	mov    $0x0,%eax
  401f57:	e8 e4 ed ff ff       	callq  400d40 <__sprintf_chk@plt>
  401f5c:	44 89 e7             	mov    %r12d,%edi
  401f5f:	e8 9c ec ff ff       	callq  400c00 <close@plt>
  401f64:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401f69:	e9 74 01 00 00       	jmpq   4020e2 <submitr+0x6c6>
  401f6e:	ba 00 20 00 00       	mov    $0x2000,%edx
  401f73:	48 8d 74 24 40       	lea    0x40(%rsp),%rsi
  401f78:	48 8d bc 24 40 80 00 	lea    0x8040(%rsp),%rdi
  401f7f:	00 
  401f80:	e8 79 f9 ff ff       	callq  4018fe <rio_readlineb>
  401f85:	48 85 c0             	test   %rax,%rax
  401f88:	7f 6a                	jg     401ff4 <submitr+0x5d8>
  401f8a:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  401f91:	3a 20 43 
  401f94:	49 89 06             	mov    %rax,(%r14)
  401f97:	48 b8 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rax
  401f9e:	20 75 6e 
  401fa1:	49 89 46 08          	mov    %rax,0x8(%r14)
  401fa5:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  401fac:	74 6f 20 
  401faf:	49 89 46 10          	mov    %rax,0x10(%r14)
  401fb3:	48 b8 72 65 61 64 20 	movabs $0x6165682064616572,%rax
  401fba:	68 65 61 
  401fbd:	49 89 46 18          	mov    %rax,0x18(%r14)
  401fc1:	48 b8 64 65 72 73 20 	movabs $0x6f72662073726564,%rax
  401fc8:	66 72 6f 
  401fcb:	49 89 46 20          	mov    %rax,0x20(%r14)
  401fcf:	48 b8 6d 20 73 65 72 	movabs $0x726576726573206d,%rax
  401fd6:	76 65 72 
  401fd9:	49 89 46 28          	mov    %rax,0x28(%r14)
  401fdd:	41 c6 46 30 00       	movb   $0x0,0x30(%r14)
  401fe2:	44 89 e7             	mov    %r12d,%edi
  401fe5:	e8 16 ec ff ff       	callq  400c00 <close@plt>
  401fea:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401fef:	e9 ee 00 00 00       	jmpq   4020e2 <submitr+0x6c6>
  401ff4:	80 7c 24 40 0d       	cmpb   $0xd,0x40(%rsp)
  401ff9:	0f 85 6f ff ff ff    	jne    401f6e <submitr+0x552>
  401fff:	80 7c 24 41 0a       	cmpb   $0xa,0x41(%rsp)
  402004:	0f 85 64 ff ff ff    	jne    401f6e <submitr+0x552>
  40200a:	80 7c 24 42 00       	cmpb   $0x0,0x42(%rsp)
  40200f:	0f 85 59 ff ff ff    	jne    401f6e <submitr+0x552>
  402015:	ba 00 20 00 00       	mov    $0x2000,%edx
  40201a:	48 8d 74 24 40       	lea    0x40(%rsp),%rsi
  40201f:	48 8d bc 24 40 80 00 	lea    0x8040(%rsp),%rdi
  402026:	00 
  402027:	e8 d2 f8 ff ff       	callq  4018fe <rio_readlineb>
  40202c:	48 85 c0             	test   %rax,%rax
  40202f:	7f 70                	jg     4020a1 <submitr+0x685>
  402031:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  402038:	3a 20 43 
  40203b:	49 89 06             	mov    %rax,(%r14)
  40203e:	48 b8 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rax
  402045:	20 75 6e 
  402048:	49 89 46 08          	mov    %rax,0x8(%r14)
  40204c:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  402053:	74 6f 20 
  402056:	49 89 46 10          	mov    %rax,0x10(%r14)
  40205a:	48 b8 72 65 61 64 20 	movabs $0x6174732064616572,%rax
  402061:	73 74 61 
  402064:	49 89 46 18          	mov    %rax,0x18(%r14)
  402068:	48 b8 74 75 73 20 6d 	movabs $0x7373656d20737574,%rax
  40206f:	65 73 73 
  402072:	49 89 46 20          	mov    %rax,0x20(%r14)
  402076:	48 b8 61 67 65 20 66 	movabs $0x6d6f726620656761,%rax
  40207d:	72 6f 6d 
  402080:	49 89 46 28          	mov    %rax,0x28(%r14)
  402084:	48 b8 20 73 65 72 76 	movabs $0x72657672657320,%rax
  40208b:	65 72 00 
  40208e:	49 89 46 30          	mov    %rax,0x30(%r14)
  402092:	44 89 e7             	mov    %r12d,%edi
  402095:	e8 66 eb ff ff       	callq  400c00 <close@plt>
  40209a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  40209f:	eb 41                	jmp    4020e2 <submitr+0x6c6>
  4020a1:	48 8d 74 24 40       	lea    0x40(%rsp),%rsi
  4020a6:	4c 89 f7             	mov    %r14,%rdi
  4020a9:	e8 02 eb ff ff       	callq  400bb0 <strcpy@plt>
  4020ae:	44 89 e7             	mov    %r12d,%edi
  4020b1:	e8 4a eb ff ff       	callq  400c00 <close@plt>
  4020b6:	41 0f b6 06          	movzbl (%r14),%eax
  4020ba:	ba 4f 00 00 00       	mov    $0x4f,%edx
  4020bf:	29 c2                	sub    %eax,%edx
  4020c1:	75 15                	jne    4020d8 <submitr+0x6bc>
  4020c3:	41 0f b6 46 01       	movzbl 0x1(%r14),%eax
  4020c8:	ba 4b 00 00 00       	mov    $0x4b,%edx
  4020cd:	29 c2                	sub    %eax,%edx
  4020cf:	75 07                	jne    4020d8 <submitr+0x6bc>
  4020d1:	41 0f b6 56 02       	movzbl 0x2(%r14),%edx
  4020d6:	f7 da                	neg    %edx
  4020d8:	85 d2                	test   %edx,%edx
  4020da:	0f 95 c0             	setne  %al
  4020dd:	0f b6 c0             	movzbl %al,%eax
  4020e0:	f7 d8                	neg    %eax
  4020e2:	48 8b 94 24 58 a0 00 	mov    0xa058(%rsp),%rdx
  4020e9:	00 
  4020ea:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
  4020f1:	00 00 
  4020f3:	0f 84 00 01 00 00    	je     4021f9 <submitr+0x7dd>
  4020f9:	e9 f6 00 00 00       	jmpq   4021f4 <submitr+0x7d8>
  4020fe:	48 8d 84 24 40 20 00 	lea    0x2040(%rsp),%rax
  402105:	00 
  402106:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  40210b:	4c 89 3c 24          	mov    %r15,(%rsp)
  40210f:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
  402114:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
  402119:	b9 e8 39 40 00       	mov    $0x4039e8,%ecx
  40211e:	ba 00 20 00 00       	mov    $0x2000,%edx
  402123:	be 01 00 00 00       	mov    $0x1,%esi
  402128:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
  40212d:	b8 00 00 00 00       	mov    $0x0,%eax
  402132:	e8 09 ec ff ff       	callq  400d40 <__sprintf_chk@plt>
  402137:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
  40213c:	b8 00 00 00 00       	mov    $0x0,%eax
  402141:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  402148:	f2 ae                	repnz scas %es:(%rdi),%al
  40214a:	48 f7 d1             	not    %rcx
  40214d:	48 83 e9 01          	sub    $0x1,%rcx
  402151:	49 89 cd             	mov    %rcx,%r13
  402154:	0f 84 ee fc ff ff    	je     401e48 <submitr+0x42c>
  40215a:	48 89 cb             	mov    %rcx,%rbx
  40215d:	48 8d 6c 24 40       	lea    0x40(%rsp),%rbp
  402162:	e9 53 fc ff ff       	jmpq   401dba <submitr+0x39e>
  402167:	48 b8 45 72 72 6f 72 	movabs $0x52203a726f727245,%rax
  40216e:	3a 20 52 
  402171:	49 89 06             	mov    %rax,(%r14)
  402174:	48 b8 65 73 75 6c 74 	movabs $0x747320746c757365,%rax
  40217b:	20 73 74 
  40217e:	49 89 46 08          	mov    %rax,0x8(%r14)
  402182:	48 b8 72 69 6e 67 20 	movabs $0x6e6f6320676e6972,%rax
  402189:	63 6f 6e 
  40218c:	49 89 46 10          	mov    %rax,0x10(%r14)
  402190:	48 b8 74 61 69 6e 73 	movabs $0x6e6120736e696174,%rax
  402197:	20 61 6e 
  40219a:	49 89 46 18          	mov    %rax,0x18(%r14)
  40219e:	48 b8 20 69 6c 6c 65 	movabs $0x6c6167656c6c6920,%rax
  4021a5:	67 61 6c 
  4021a8:	49 89 46 20          	mov    %rax,0x20(%r14)
  4021ac:	48 b8 20 6f 72 20 75 	movabs $0x72706e7520726f20,%rax
  4021b3:	6e 70 72 
  4021b6:	49 89 46 28          	mov    %rax,0x28(%r14)
  4021ba:	48 b8 69 6e 74 61 62 	movabs $0x20656c6261746e69,%rax
  4021c1:	6c 65 20 
  4021c4:	49 89 46 30          	mov    %rax,0x30(%r14)
  4021c8:	48 b8 63 68 61 72 61 	movabs $0x6574636172616863,%rax
  4021cf:	63 74 65 
  4021d2:	49 89 46 38          	mov    %rax,0x38(%r14)
  4021d6:	66 41 c7 46 40 72 2e 	movw   $0x2e72,0x40(%r14)
  4021dd:	41 c6 46 42 00       	movb   $0x0,0x42(%r14)
  4021e2:	44 89 e7             	mov    %r12d,%edi
  4021e5:	e8 16 ea ff ff       	callq  400c00 <close@plt>
  4021ea:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4021ef:	e9 ee fe ff ff       	jmpq   4020e2 <submitr+0x6c6>
  4021f4:	e8 e7 e9 ff ff       	callq  400be0 <__stack_chk_fail@plt>
  4021f9:	48 81 c4 68 a0 00 00 	add    $0xa068,%rsp
  402200:	5b                   	pop    %rbx
  402201:	5d                   	pop    %rbp
  402202:	41 5c                	pop    %r12
  402204:	41 5d                	pop    %r13
  402206:	41 5e                	pop    %r14
  402208:	41 5f                	pop    %r15
  40220a:	c3                   	retq   

000000000040220b <init_timeout>:
  40220b:	53                   	push   %rbx
  40220c:	89 fb                	mov    %edi,%ebx
  40220e:	85 ff                	test   %edi,%edi
  402210:	74 1e                	je     402230 <init_timeout+0x25>
  402212:	be d0 18 40 00       	mov    $0x4018d0,%esi
  402217:	bf 0e 00 00 00       	mov    $0xe,%edi
  40221c:	e8 1f ea ff ff       	callq  400c40 <signal@plt>
  402221:	85 db                	test   %ebx,%ebx
  402223:	bf 00 00 00 00       	mov    $0x0,%edi
  402228:	0f 49 fb             	cmovns %ebx,%edi
  40222b:	e8 c0 e9 ff ff       	callq  400bf0 <alarm@plt>
  402230:	5b                   	pop    %rbx
  402231:	c3                   	retq   

0000000000402232 <init_driver>:
  402232:	55                   	push   %rbp
  402233:	53                   	push   %rbx
  402234:	48 83 ec 28          	sub    $0x28,%rsp
  402238:	48 89 fd             	mov    %rdi,%rbp
  40223b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  402242:	00 00 
  402244:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  402249:	31 c0                	xor    %eax,%eax
  40224b:	be 01 00 00 00       	mov    $0x1,%esi
  402250:	bf 0d 00 00 00       	mov    $0xd,%edi
  402255:	e8 e6 e9 ff ff       	callq  400c40 <signal@plt>
  40225a:	be 01 00 00 00       	mov    $0x1,%esi
  40225f:	bf 1d 00 00 00       	mov    $0x1d,%edi
  402264:	e8 d7 e9 ff ff       	callq  400c40 <signal@plt>
  402269:	be 01 00 00 00       	mov    $0x1,%esi
  40226e:	bf 1d 00 00 00       	mov    $0x1d,%edi
  402273:	e8 c8 e9 ff ff       	callq  400c40 <signal@plt>
  402278:	ba 00 00 00 00       	mov    $0x0,%edx
  40227d:	be 01 00 00 00       	mov    $0x1,%esi
  402282:	bf 02 00 00 00       	mov    $0x2,%edi
  402287:	e8 c4 ea ff ff       	callq  400d50 <socket@plt>
  40228c:	89 c3                	mov    %eax,%ebx
  40228e:	85 c0                	test   %eax,%eax
  402290:	79 4f                	jns    4022e1 <init_driver+0xaf>
  402292:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  402299:	3a 20 43 
  40229c:	48 89 45 00          	mov    %rax,0x0(%rbp)
  4022a0:	48 b8 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rax
  4022a7:	20 75 6e 
  4022aa:	48 89 45 08          	mov    %rax,0x8(%rbp)
  4022ae:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  4022b5:	74 6f 20 
  4022b8:	48 89 45 10          	mov    %rax,0x10(%rbp)
  4022bc:	48 b8 63 72 65 61 74 	movabs $0x7320657461657263,%rax
  4022c3:	65 20 73 
  4022c6:	48 89 45 18          	mov    %rax,0x18(%rbp)
  4022ca:	c7 45 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%rbp)
  4022d1:	66 c7 45 24 74 00    	movw   $0x74,0x24(%rbp)
  4022d7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4022dc:	e9 0a 01 00 00       	jmpq   4023eb <init_driver+0x1b9>
  4022e1:	bf 28 2e 40 00       	mov    $0x402e28,%edi
  4022e6:	e8 65 e9 ff ff       	callq  400c50 <gethostbyname@plt>
  4022eb:	48 85 c0             	test   %rax,%rax
  4022ee:	75 68                	jne    402358 <init_driver+0x126>
  4022f0:	48 b8 45 72 72 6f 72 	movabs $0x44203a726f727245,%rax
  4022f7:	3a 20 44 
  4022fa:	48 89 45 00          	mov    %rax,0x0(%rbp)
  4022fe:	48 b8 4e 53 20 69 73 	movabs $0x6e7520736920534e,%rax
  402305:	20 75 6e 
  402308:	48 89 45 08          	mov    %rax,0x8(%rbp)
  40230c:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  402313:	74 6f 20 
  402316:	48 89 45 10          	mov    %rax,0x10(%rbp)
  40231a:	48 b8 72 65 73 6f 6c 	movabs $0x2065766c6f736572,%rax
  402321:	76 65 20 
  402324:	48 89 45 18          	mov    %rax,0x18(%rbp)
  402328:	48 b8 73 65 72 76 65 	movabs $0x6120726576726573,%rax
  40232f:	72 20 61 
  402332:	48 89 45 20          	mov    %rax,0x20(%rbp)
  402336:	c7 45 28 64 64 72 65 	movl   $0x65726464,0x28(%rbp)
  40233d:	66 c7 45 2c 73 73    	movw   $0x7373,0x2c(%rbp)
  402343:	c6 45 2e 00          	movb   $0x0,0x2e(%rbp)
  402347:	89 df                	mov    %ebx,%edi
  402349:	e8 b2 e8 ff ff       	callq  400c00 <close@plt>
  40234e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  402353:	e9 93 00 00 00       	jmpq   4023eb <init_driver+0x1b9>
  402358:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
  40235f:	00 
  402360:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
  402367:	00 00 
  402369:	66 c7 04 24 02 00    	movw   $0x2,(%rsp)
  40236f:	48 63 50 14          	movslq 0x14(%rax),%rdx
  402373:	48 8b 40 18          	mov    0x18(%rax),%rax
  402377:	48 8d 7c 24 04       	lea    0x4(%rsp),%rdi
  40237c:	b9 0c 00 00 00       	mov    $0xc,%ecx
  402381:	48 8b 30             	mov    (%rax),%rsi
  402384:	e8 d7 e8 ff ff       	callq  400c60 <__memmove_chk@plt>
  402389:	66 c7 44 24 02 60 80 	movw   $0x8060,0x2(%rsp)
  402390:	ba 10 00 00 00       	mov    $0x10,%edx
  402395:	48 89 e6             	mov    %rsp,%rsi
  402398:	89 df                	mov    %ebx,%edi
  40239a:	e8 61 e9 ff ff       	callq  400d00 <connect@plt>
  40239f:	85 c0                	test   %eax,%eax
  4023a1:	79 32                	jns    4023d5 <init_driver+0x1a3>
  4023a3:	41 b8 28 2e 40 00    	mov    $0x402e28,%r8d
  4023a9:	b9 38 3a 40 00       	mov    $0x403a38,%ecx
  4023ae:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
  4023b5:	be 01 00 00 00       	mov    $0x1,%esi
  4023ba:	48 89 ef             	mov    %rbp,%rdi
  4023bd:	b8 00 00 00 00       	mov    $0x0,%eax
  4023c2:	e8 79 e9 ff ff       	callq  400d40 <__sprintf_chk@plt>
  4023c7:	89 df                	mov    %ebx,%edi
  4023c9:	e8 32 e8 ff ff       	callq  400c00 <close@plt>
  4023ce:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4023d3:	eb 16                	jmp    4023eb <init_driver+0x1b9>
  4023d5:	89 df                	mov    %ebx,%edi
  4023d7:	e8 24 e8 ff ff       	callq  400c00 <close@plt>
  4023dc:	66 c7 45 00 4f 4b    	movw   $0x4b4f,0x0(%rbp)
  4023e2:	c6 45 02 00          	movb   $0x0,0x2(%rbp)
  4023e6:	b8 00 00 00 00       	mov    $0x0,%eax
  4023eb:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
  4023f0:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  4023f7:	00 00 
  4023f9:	74 05                	je     402400 <init_driver+0x1ce>
  4023fb:	e8 e0 e7 ff ff       	callq  400be0 <__stack_chk_fail@plt>
  402400:	48 83 c4 28          	add    $0x28,%rsp
  402404:	5b                   	pop    %rbx
  402405:	5d                   	pop    %rbp
  402406:	c3                   	retq   

0000000000402407 <driver_post>:
  402407:	53                   	push   %rbx
  402408:	48 83 ec 10          	sub    $0x10,%rsp
  40240c:	48 89 cb             	mov    %rcx,%rbx
  40240f:	85 d2                	test   %edx,%edx
  402411:	74 27                	je     40243a <driver_post+0x33>
  402413:	48 89 f2             	mov    %rsi,%rdx
  402416:	be 78 3a 40 00       	mov    $0x403a78,%esi
  40241b:	bf 01 00 00 00       	mov    $0x1,%edi
  402420:	b8 00 00 00 00       	mov    $0x0,%eax
  402425:	e8 96 e8 ff ff       	callq  400cc0 <__printf_chk@plt>
  40242a:	66 c7 03 4f 4b       	movw   $0x4b4f,(%rbx)
  40242f:	c6 43 02 00          	movb   $0x0,0x2(%rbx)
  402433:	b8 00 00 00 00       	mov    $0x0,%eax
  402438:	eb 3e                	jmp    402478 <driver_post+0x71>
  40243a:	48 85 ff             	test   %rdi,%rdi
  40243d:	74 2b                	je     40246a <driver_post+0x63>
  40243f:	80 3f 00             	cmpb   $0x0,(%rdi)
  402442:	74 26                	je     40246a <driver_post+0x63>
  402444:	48 89 0c 24          	mov    %rcx,(%rsp)
  402448:	49 89 f1             	mov    %rsi,%r9
  40244b:	41 b8 8f 3a 40 00    	mov    $0x403a8f,%r8d
  402451:	48 89 f9             	mov    %rdi,%rcx
  402454:	ba 93 3a 40 00       	mov    $0x403a93,%edx
  402459:	be 80 60 00 00       	mov    $0x6080,%esi
  40245e:	bf 28 2e 40 00       	mov    $0x402e28,%edi
  402463:	e8 b4 f5 ff ff       	callq  401a1c <submitr>
  402468:	eb 0e                	jmp    402478 <driver_post+0x71>
  40246a:	66 c7 03 4f 4b       	movw   $0x4b4f,(%rbx)
  40246f:	c6 43 02 00          	movb   $0x0,0x2(%rbx)
  402473:	b8 00 00 00 00       	mov    $0x0,%eax
  402478:	48 83 c4 10          	add    $0x10,%rsp
  40247c:	5b                   	pop    %rbx
  40247d:	c3                   	retq   
  40247e:	66 90                	xchg   %ax,%ax

0000000000402480 <__libc_csu_init>:
  402480:	41 57                	push   %r15
  402482:	41 89 ff             	mov    %edi,%r15d
  402485:	41 56                	push   %r14
  402487:	49 89 f6             	mov    %rsi,%r14
  40248a:	41 55                	push   %r13
  40248c:	49 89 d5             	mov    %rdx,%r13
  40248f:	41 54                	push   %r12
  402491:	4c 8d 25 78 29 20 00 	lea    0x202978(%rip),%r12        # 604e10 <__frame_dummy_init_array_entry>
  402498:	55                   	push   %rbp
  402499:	48 8d 2d 78 29 20 00 	lea    0x202978(%rip),%rbp        # 604e18 <__init_array_end>
  4024a0:	53                   	push   %rbx
  4024a1:	4c 29 e5             	sub    %r12,%rbp
  4024a4:	31 db                	xor    %ebx,%ebx
  4024a6:	48 c1 fd 03          	sar    $0x3,%rbp
  4024aa:	48 83 ec 08          	sub    $0x8,%rsp
  4024ae:	e8 9d e6 ff ff       	callq  400b50 <_init>
  4024b3:	48 85 ed             	test   %rbp,%rbp
  4024b6:	74 1e                	je     4024d6 <__libc_csu_init+0x56>
  4024b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4024bf:	00 
  4024c0:	4c 89 ea             	mov    %r13,%rdx
  4024c3:	4c 89 f6             	mov    %r14,%rsi
  4024c6:	44 89 ff             	mov    %r15d,%edi
  4024c9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  4024cd:	48 83 c3 01          	add    $0x1,%rbx
  4024d1:	48 39 eb             	cmp    %rbp,%rbx
  4024d4:	75 ea                	jne    4024c0 <__libc_csu_init+0x40>
  4024d6:	48 83 c4 08          	add    $0x8,%rsp
  4024da:	5b                   	pop    %rbx
  4024db:	5d                   	pop    %rbp
  4024dc:	41 5c                	pop    %r12
  4024de:	41 5d                	pop    %r13
  4024e0:	41 5e                	pop    %r14
  4024e2:	41 5f                	pop    %r15
  4024e4:	c3                   	retq   
  4024e5:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  4024ec:	00 00 00 00 

00000000004024f0 <__libc_csu_fini>:
  4024f0:	f3 c3                	repz retq 

Disassembly of section .fini:

00000000004024f4 <_fini>:
  4024f4:	48 83 ec 08          	sub    $0x8,%rsp
  4024f8:	48 83 c4 08          	add    $0x8,%rsp
  4024fc:	c3                   	retq   
